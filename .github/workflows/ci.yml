# This is a basic workflow to help you get started with Actions

name: CI on AWS GPU instance

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "actions" ]
    max-concurrency: 1
  pull_request:
    branches: [ "development" ]
    max-concurrency: 1
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    max-concurrency: 1

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  start-gpu-instance:
    name: Start GPU Instance
    runs-on: ubuntu-latest

    steps:
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.SID_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.SID_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.ALUS_SID_INSTANCE_REGION }}
    - uses: actions/checkout@v3
    - name: Trigger the instance
      id: trigger_instance
      run: |
        set -o pipefail
        output=$($GITHUB_WORKSPACE/build-automation/trigger_ec2_instance.sh | tee)
        ip_address=$(echo $output | tail -n 1)
        echo "{instance_ip}={$ip_address}" >> $GITHUB_OUTPUT

  run-ci-process:
    name: Build and run unit and integration tests
    runs-on: ubuntu-latest
    needs: start-gpu-instance

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: |
          echo "Instance IP to use is ${{ steps.trigger_instance.outputs.instance_ip}}"
          pwd
          ls -la

      # Runs a set of commands using the runners shell
#      - name: Run a multi-line script
#        run: |
#          echo Add other actions to build,
#          echo test, and deploy your project.
#          build-automation/run_ci_on_ec2_instance.sh

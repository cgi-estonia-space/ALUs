# This is a sample build configuration for C++ â€“ Make.
# Check our guides at https://confluence.atlassian.com/x/5Q4SMw for more examples.
# Only use spaces to indent your .yml configuration.
# -----
# You can specify a custom docker image from Docker Hub as your build environment.
clone:
  lfs: true
  depth: full
pipelines:
  pull-requests:
    '**': # This runs as default for any branch not elsewhere defined
      - parallel:
          - step: # Setup
              image: cgialus/alus-ci:latest
              script:
                - cd ~
                - mkdir .aws
                - cd .aws
                - echo "[profile sid_man]" > config
                - echo "aws_access_key_id = $SID_MAN_ACCESS_KEY_ID" >> config
                - echo "aws_secret_access_key = $SID_MAN_SECRET_ACCESS_KEY" >> config
                - echo "region = eu-central-1" >> config
                - echo "output = json" >> config
                - cd $BITBUCKET_CLONE_DIR
                - git submodule update --init --recursive
                - mkdir -p $BITBUCKET_CLONE_DIR/build/test-reports
                - git ls-files --cached --recurse-submodules | tar Tczf - archive.tar.gz
                - $BITBUCKET_CLONE_DIR/build-automation/run_ci_on_ec2_instance.sh "archive.tar.gz" $G3_4xLARGE_INSTANCE_ID "sid_man"
              after-script:
                - date_stamp=$(date +"%Y_%m_%d_%H%M")
                - cd $BITBUCKET_CLONE_DIR/build/ci-artifacts/
                - >
                  for file in *; do
                      [ -f "$file" ] && $BITBUCKET_CLONE_DIR/build-automation/put_to_alus_ci_artifacts.sh "${BITBUCKET_BUILD_NUMBER}_${BITBUCKET_BRANCH}_${date_stamp}" $file sid_man
                  done
          - step: #SonarCloud
              image: cgialus/alus-infra:latest
              name: SonarCloud scan
              script:
                - cd $BITBUCKET_CLONE_DIR
                - git submodule update --init --recursive
                - export SONAR_SCANNER_VERSION=4.4.0.2170
                - export SONAR_SCANNER_HOME=/root/.sonar/sonar-scanner-$SONAR_SCANNER_VERSION-linux
                - export BW_OUTPUT=/root/.sonar/bw-output
                - mkdir -p $BW_OUTPUT
                - curl --create-dirs -sSLo /root/.sonar/sonar-scanner.zip https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-$SONAR_SCANNER_VERSION-linux.zip
                - unzip -o /root/.sonar/sonar-scanner.zip -d /root/.sonar/
                - export PATH=$SONAR_SCANNER_HOME/bin:$PATH
                - export SONAR_SCANNER_OPTS="-server"
                - curl --create-dirs -sSLo /root/.sonar/build-wrapper-linux-x86.zip https://sonarcloud.io/static/cpp/build-wrapper-linux-x86.zip
                - unzip -o /root/.sonar/build-wrapper-linux-x86.zip -d /root/.sonar/
                - export PATH=/root/.sonar/build-wrapper-linux-x86:$PATH
                - rm -rf build
                - cmake . -Bbuild -DSONARCLOUD_BUILD=1
                - cd build
                - build-wrapper-linux-x86-64 --out-dir $BW_OUTPUT make -j8
                - cd $BITBUCKET_CLONE_DIR
                - sonar-scanner -Dsonar.cfamily.build-wrapper-output=$BW_OUTPUT -Dsonar.sources=algs,app,util -Dsonar.tests=test,test_integration -Dsonar.exclusions=tensorflow/**,external/**,build/**,.git/** -Dsonar.test.exclusions=tensorflow/**,external/**,build/**,.git/** -X

  custom:
    nightly-release: #name of this pipeline
      - parallel:
          - step:
              name: 'CI check'
              image: cgialus/alus-ci:latest
              script:
                - cd ~
                - mkdir .aws
                - cd .aws
                - echo "[profile sid_man]" > config
                - echo "aws_access_key_id = $SID_MAN_ACCESS_KEY_ID" >> config
                - echo "aws_secret_access_key = $SID_MAN_SECRET_ACCESS_KEY" >> config
                - echo "region = eu-central-1" >> config
                - echo "output = json" >> config
                - cd $BITBUCKET_CLONE_DIR
                - git submodule update --init --recursive
                - mkdir -p $BITBUCKET_CLONE_DIR/build/test-reports
                - git ls-files --cached --recurse-submodules | tar Tczf - archive.tar.gz
                - $BITBUCKET_CLONE_DIR/build-automation/run_ci_on_ec2_instance.sh "archive.tar.gz" $G3_4xLARGE_INSTANCE_ID "sid_man"
              after-script:
                - date_stamp=$(date +"%Y_%m_%d_%H%M")
                - cd $BITBUCKET_CLONE_DIR/build/ci-artifacts/
                - >
                  for file in *; do
                      [ -f "$file" ] && $BITBUCKET_CLONE_DIR/build-automation/put_to_alus_ci_artifacts.sh "${BITBUCKET_BUILD_NUMBER}_${BITBUCKET_BRANCH}_${date_stamp}" $file sid_man
                  done
          - step:
              name: 'Build Alus release package'
              image: cgialus/alus-infra:latest
              clone:
                depth: 1
                enabled: true
                lfs: true
              script:
                - git submodule update --init --recursive
                - build_dir="build-nightly"
                - cmake . -B${build_dir} -DENABLE_UNIT_TESTS=false -DENABLE_INTEGRATION_TESTS=false -DCUDA_ARCH="52;70"
                - cmake --build $build_dir --target all -- -j 8
                - cd $build_dir
                - date_stamp=$(date +"%Y_%m_%d_%H%M")
                - build_package_name="alus-nightly-${BITBUCKET_BUILD_NUMBER}-${date_stamp}"
                - mv alus_package $build_package_name
                - cp ../README.md $build_package_name/.
                - cp ../VERSION $build_package_name/.
                - echo $BITBUCKET_COMMIT >> $build_package_name/VERSION
                - echo $build_package_name >> $build_package_name/VERSION
                - tar -czvf ${build_package_name}.tar.gz $build_package_name
              artifacts:
                - build-nightly/*.tar.gz
      - step:
          name: 'End to end tests and publish'
          image: cgialus/alus-ci:latest
          clone:
            enabled: false
          script:
            - cd ~
            - mkdir .aws
            - cd .aws
            - echo "[profile sid_man]" > config
            - echo "aws_access_key_id = $SID_MAN_ACCESS_KEY_ID" >> config
            - echo "aws_secret_access_key = $SID_MAN_SECRET_ACCESS_KEY" >> config
            - echo "region = eu-central-1" >> config
            - echo "output = json" >> config
            - aws ec2 start-instances --instance-ids $P3_2xLARGE_INSTANCE_ID --profile sid_man
            - sleep 60
            - ip_address=$(aws ec2 describe-instances --instance-ids $P3_2xLARGE_INSTANCE_ID --profile sid_man | grep PublicDnsName | head -1 | awk -F'[:]' '{print $2}' | xargs)
            - ip_address=${ip_address%?}
            - echo $ip_address
            - cd $BITBUCKET_CLONE_DIR
            - cd build-nightly
            - build_filename=$(basename *.tar.gz)
            - build_id="${build_filename%%.*}"
            - scp -r -oStrictHostKeyChecking=no *.tar.gz ubuntu@$ip_address:/home/ubuntu/nightly_builds/
            - ssh -oStrictHostKeyChecking=no ubuntu@$ip_address "/home/ubuntu/nightly_builds/execute_nightly.sh ${build_id}"
          after-script:
            - aws ec2 stop-instances --instance-ids $P3_2xLARGE_INSTANCE_ID --profile sid_man

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tensorflow/core/framework/function.proto

#include "tensorflow/core/framework/function.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_tensorflow_2fcore_2fframework_2fattr_5fvalue_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_AttrValue_tensorflow_2fcore_2fframework_2fattr_5fvalue_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_tensorflow_2fcore_2fframework_2ffunction_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<7> scc_info_FunctionDef_tensorflow_2fcore_2fframework_2ffunction_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_tensorflow_2fcore_2fframework_2ffunction_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_FunctionDef_ArgAttrEntry_DoNotUse_tensorflow_2fcore_2fframework_2ffunction_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_tensorflow_2fcore_2fframework_2ffunction_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_FunctionDef_ArgAttrs_tensorflow_2fcore_2fframework_2ffunction_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_tensorflow_2fcore_2fframework_2ffunction_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_FunctionDef_ArgAttrs_AttrEntry_DoNotUse_tensorflow_2fcore_2fframework_2ffunction_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_tensorflow_2fcore_2fframework_2ffunction_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_FunctionDef_AttrEntry_DoNotUse_tensorflow_2fcore_2fframework_2ffunction_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_tensorflow_2fcore_2fframework_2ffunction_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_FunctionDef_ControlRetEntry_DoNotUse_tensorflow_2fcore_2fframework_2ffunction_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_tensorflow_2fcore_2fframework_2ffunction_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_FunctionDef_ResourceArgUniqueIdEntry_DoNotUse_tensorflow_2fcore_2fframework_2ffunction_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_tensorflow_2fcore_2fframework_2ffunction_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_FunctionDef_RetEntry_DoNotUse_tensorflow_2fcore_2fframework_2ffunction_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_tensorflow_2fcore_2fframework_2ffunction_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GradientDef_tensorflow_2fcore_2fframework_2ffunction_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_tensorflow_2fcore_2fframework_2fnode_5fdef_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_NodeDef_tensorflow_2fcore_2fframework_2fnode_5fdef_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_tensorflow_2fcore_2fframework_2fop_5fdef_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<3> scc_info_OpDef_tensorflow_2fcore_2fframework_2fop_5fdef_2eproto;
namespace tensorflow {
class FunctionDefLibraryDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<FunctionDefLibrary> _instance;
} _FunctionDefLibrary_default_instance_;
class FunctionDef_AttrEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<FunctionDef_AttrEntry_DoNotUse> _instance;
} _FunctionDef_AttrEntry_DoNotUse_default_instance_;
class FunctionDef_ArgAttrs_AttrEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<FunctionDef_ArgAttrs_AttrEntry_DoNotUse> _instance;
} _FunctionDef_ArgAttrs_AttrEntry_DoNotUse_default_instance_;
class FunctionDef_ArgAttrsDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<FunctionDef_ArgAttrs> _instance;
} _FunctionDef_ArgAttrs_default_instance_;
class FunctionDef_ArgAttrEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<FunctionDef_ArgAttrEntry_DoNotUse> _instance;
} _FunctionDef_ArgAttrEntry_DoNotUse_default_instance_;
class FunctionDef_ResourceArgUniqueIdEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<FunctionDef_ResourceArgUniqueIdEntry_DoNotUse> _instance;
} _FunctionDef_ResourceArgUniqueIdEntry_DoNotUse_default_instance_;
class FunctionDef_RetEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<FunctionDef_RetEntry_DoNotUse> _instance;
} _FunctionDef_RetEntry_DoNotUse_default_instance_;
class FunctionDef_ControlRetEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<FunctionDef_ControlRetEntry_DoNotUse> _instance;
} _FunctionDef_ControlRetEntry_DoNotUse_default_instance_;
class FunctionDefDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<FunctionDef> _instance;
} _FunctionDef_default_instance_;
class GradientDefDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GradientDef> _instance;
} _GradientDef_default_instance_;
}  // namespace tensorflow
static void InitDefaultsscc_info_FunctionDef_tensorflow_2fcore_2fframework_2ffunction_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::_FunctionDef_default_instance_;
    new (ptr) ::tensorflow::FunctionDef();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::FunctionDef::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<7> scc_info_FunctionDef_tensorflow_2fcore_2fframework_2ffunction_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 7, InitDefaultsscc_info_FunctionDef_tensorflow_2fcore_2fframework_2ffunction_2eproto}, {
      &scc_info_OpDef_tensorflow_2fcore_2fframework_2fop_5fdef_2eproto.base,
      &scc_info_FunctionDef_AttrEntry_DoNotUse_tensorflow_2fcore_2fframework_2ffunction_2eproto.base,
      &scc_info_FunctionDef_ArgAttrEntry_DoNotUse_tensorflow_2fcore_2fframework_2ffunction_2eproto.base,
      &scc_info_FunctionDef_ResourceArgUniqueIdEntry_DoNotUse_tensorflow_2fcore_2fframework_2ffunction_2eproto.base,
      &scc_info_NodeDef_tensorflow_2fcore_2fframework_2fnode_5fdef_2eproto.base,
      &scc_info_FunctionDef_RetEntry_DoNotUse_tensorflow_2fcore_2fframework_2ffunction_2eproto.base,
      &scc_info_FunctionDef_ControlRetEntry_DoNotUse_tensorflow_2fcore_2fframework_2ffunction_2eproto.base,}};

static void InitDefaultsscc_info_FunctionDef_ArgAttrEntry_DoNotUse_tensorflow_2fcore_2fframework_2ffunction_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::_FunctionDef_ArgAttrEntry_DoNotUse_default_instance_;
    new (ptr) ::tensorflow::FunctionDef_ArgAttrEntry_DoNotUse();
  }
  ::tensorflow::FunctionDef_ArgAttrEntry_DoNotUse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_FunctionDef_ArgAttrEntry_DoNotUse_tensorflow_2fcore_2fframework_2ffunction_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsscc_info_FunctionDef_ArgAttrEntry_DoNotUse_tensorflow_2fcore_2fframework_2ffunction_2eproto}, {
      &scc_info_FunctionDef_ArgAttrs_tensorflow_2fcore_2fframework_2ffunction_2eproto.base,}};

static void InitDefaultsscc_info_FunctionDef_ArgAttrs_tensorflow_2fcore_2fframework_2ffunction_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::_FunctionDef_ArgAttrs_default_instance_;
    new (ptr) ::tensorflow::FunctionDef_ArgAttrs();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::FunctionDef_ArgAttrs::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_FunctionDef_ArgAttrs_tensorflow_2fcore_2fframework_2ffunction_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsscc_info_FunctionDef_ArgAttrs_tensorflow_2fcore_2fframework_2ffunction_2eproto}, {
      &scc_info_FunctionDef_ArgAttrs_AttrEntry_DoNotUse_tensorflow_2fcore_2fframework_2ffunction_2eproto.base,}};

static void InitDefaultsscc_info_FunctionDef_ArgAttrs_AttrEntry_DoNotUse_tensorflow_2fcore_2fframework_2ffunction_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::_FunctionDef_ArgAttrs_AttrEntry_DoNotUse_default_instance_;
    new (ptr) ::tensorflow::FunctionDef_ArgAttrs_AttrEntry_DoNotUse();
  }
  ::tensorflow::FunctionDef_ArgAttrs_AttrEntry_DoNotUse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_FunctionDef_ArgAttrs_AttrEntry_DoNotUse_tensorflow_2fcore_2fframework_2ffunction_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsscc_info_FunctionDef_ArgAttrs_AttrEntry_DoNotUse_tensorflow_2fcore_2fframework_2ffunction_2eproto}, {
      &scc_info_AttrValue_tensorflow_2fcore_2fframework_2fattr_5fvalue_2eproto.base,}};

static void InitDefaultsscc_info_FunctionDef_AttrEntry_DoNotUse_tensorflow_2fcore_2fframework_2ffunction_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::_FunctionDef_AttrEntry_DoNotUse_default_instance_;
    new (ptr) ::tensorflow::FunctionDef_AttrEntry_DoNotUse();
  }
  ::tensorflow::FunctionDef_AttrEntry_DoNotUse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_FunctionDef_AttrEntry_DoNotUse_tensorflow_2fcore_2fframework_2ffunction_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsscc_info_FunctionDef_AttrEntry_DoNotUse_tensorflow_2fcore_2fframework_2ffunction_2eproto}, {
      &scc_info_AttrValue_tensorflow_2fcore_2fframework_2fattr_5fvalue_2eproto.base,}};

static void InitDefaultsscc_info_FunctionDef_ControlRetEntry_DoNotUse_tensorflow_2fcore_2fframework_2ffunction_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::_FunctionDef_ControlRetEntry_DoNotUse_default_instance_;
    new (ptr) ::tensorflow::FunctionDef_ControlRetEntry_DoNotUse();
  }
  ::tensorflow::FunctionDef_ControlRetEntry_DoNotUse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_FunctionDef_ControlRetEntry_DoNotUse_tensorflow_2fcore_2fframework_2ffunction_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_FunctionDef_ControlRetEntry_DoNotUse_tensorflow_2fcore_2fframework_2ffunction_2eproto}, {}};

static void InitDefaultsscc_info_FunctionDef_ResourceArgUniqueIdEntry_DoNotUse_tensorflow_2fcore_2fframework_2ffunction_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::_FunctionDef_ResourceArgUniqueIdEntry_DoNotUse_default_instance_;
    new (ptr) ::tensorflow::FunctionDef_ResourceArgUniqueIdEntry_DoNotUse();
  }
  ::tensorflow::FunctionDef_ResourceArgUniqueIdEntry_DoNotUse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_FunctionDef_ResourceArgUniqueIdEntry_DoNotUse_tensorflow_2fcore_2fframework_2ffunction_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_FunctionDef_ResourceArgUniqueIdEntry_DoNotUse_tensorflow_2fcore_2fframework_2ffunction_2eproto}, {}};

static void InitDefaultsscc_info_FunctionDef_RetEntry_DoNotUse_tensorflow_2fcore_2fframework_2ffunction_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::_FunctionDef_RetEntry_DoNotUse_default_instance_;
    new (ptr) ::tensorflow::FunctionDef_RetEntry_DoNotUse();
  }
  ::tensorflow::FunctionDef_RetEntry_DoNotUse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_FunctionDef_RetEntry_DoNotUse_tensorflow_2fcore_2fframework_2ffunction_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_FunctionDef_RetEntry_DoNotUse_tensorflow_2fcore_2fframework_2ffunction_2eproto}, {}};

static void InitDefaultsscc_info_FunctionDefLibrary_tensorflow_2fcore_2fframework_2ffunction_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::_FunctionDefLibrary_default_instance_;
    new (ptr) ::tensorflow::FunctionDefLibrary();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::FunctionDefLibrary::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_FunctionDefLibrary_tensorflow_2fcore_2fframework_2ffunction_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsscc_info_FunctionDefLibrary_tensorflow_2fcore_2fframework_2ffunction_2eproto}, {
      &scc_info_FunctionDef_tensorflow_2fcore_2fframework_2ffunction_2eproto.base,
      &scc_info_GradientDef_tensorflow_2fcore_2fframework_2ffunction_2eproto.base,}};

static void InitDefaultsscc_info_GradientDef_tensorflow_2fcore_2fframework_2ffunction_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::_GradientDef_default_instance_;
    new (ptr) ::tensorflow::GradientDef();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::GradientDef::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GradientDef_tensorflow_2fcore_2fframework_2ffunction_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_GradientDef_tensorflow_2fcore_2fframework_2ffunction_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_tensorflow_2fcore_2fframework_2ffunction_2eproto[10];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_tensorflow_2fcore_2fframework_2ffunction_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_tensorflow_2fcore_2fframework_2ffunction_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_tensorflow_2fcore_2fframework_2ffunction_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::tensorflow::FunctionDefLibrary, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::tensorflow::FunctionDefLibrary, function_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::FunctionDefLibrary, gradient_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::FunctionDef_AttrEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::FunctionDef_AttrEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::tensorflow::FunctionDef_AttrEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::FunctionDef_AttrEntry_DoNotUse, value_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::tensorflow::FunctionDef_ArgAttrs_AttrEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::FunctionDef_ArgAttrs_AttrEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::tensorflow::FunctionDef_ArgAttrs_AttrEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::FunctionDef_ArgAttrs_AttrEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::tensorflow::FunctionDef_ArgAttrs, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::tensorflow::FunctionDef_ArgAttrs, attr_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::FunctionDef_ArgAttrEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::FunctionDef_ArgAttrEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::tensorflow::FunctionDef_ArgAttrEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::FunctionDef_ArgAttrEntry_DoNotUse, value_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::tensorflow::FunctionDef_ResourceArgUniqueIdEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::FunctionDef_ResourceArgUniqueIdEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::tensorflow::FunctionDef_ResourceArgUniqueIdEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::FunctionDef_ResourceArgUniqueIdEntry_DoNotUse, value_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::tensorflow::FunctionDef_RetEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::FunctionDef_RetEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::tensorflow::FunctionDef_RetEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::FunctionDef_RetEntry_DoNotUse, value_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::tensorflow::FunctionDef_ControlRetEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::FunctionDef_ControlRetEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::tensorflow::FunctionDef_ControlRetEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::FunctionDef_ControlRetEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::tensorflow::FunctionDef, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::tensorflow::FunctionDef, signature_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::FunctionDef, attr_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::FunctionDef, arg_attr_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::FunctionDef, resource_arg_unique_id_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::FunctionDef, node_def_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::FunctionDef, ret_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::FunctionDef, control_ret_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::tensorflow::GradientDef, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::tensorflow::GradientDef, function_name_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::GradientDef, gradient_func_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::tensorflow::FunctionDefLibrary)},
  { 7, 14, sizeof(::tensorflow::FunctionDef_AttrEntry_DoNotUse)},
  { 16, 23, sizeof(::tensorflow::FunctionDef_ArgAttrs_AttrEntry_DoNotUse)},
  { 25, -1, sizeof(::tensorflow::FunctionDef_ArgAttrs)},
  { 31, 38, sizeof(::tensorflow::FunctionDef_ArgAttrEntry_DoNotUse)},
  { 40, 47, sizeof(::tensorflow::FunctionDef_ResourceArgUniqueIdEntry_DoNotUse)},
  { 49, 56, sizeof(::tensorflow::FunctionDef_RetEntry_DoNotUse)},
  { 58, 65, sizeof(::tensorflow::FunctionDef_ControlRetEntry_DoNotUse)},
  { 67, -1, sizeof(::tensorflow::FunctionDef)},
  { 79, -1, sizeof(::tensorflow::GradientDef)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::tensorflow::_FunctionDefLibrary_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::tensorflow::_FunctionDef_AttrEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::tensorflow::_FunctionDef_ArgAttrs_AttrEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::tensorflow::_FunctionDef_ArgAttrs_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::tensorflow::_FunctionDef_ArgAttrEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::tensorflow::_FunctionDef_ResourceArgUniqueIdEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::tensorflow::_FunctionDef_RetEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::tensorflow::_FunctionDef_ControlRetEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::tensorflow::_FunctionDef_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::tensorflow::_GradientDef_default_instance_),
};

const char descriptor_table_protodef_tensorflow_2fcore_2fframework_2ffunction_2eproto[] =
  "\n(tensorflow/core/framework/function.pro"
  "to\022\ntensorflow\032*tensorflow/core/framewor"
  "k/attr_value.proto\032(tensorflow/core/fram"
  "ework/node_def.proto\032&tensorflow/core/fr"
  "amework/op_def.proto\"j\n\022FunctionDefLibra"
  "ry\022)\n\010function\030\001 \003(\0132\027.tensorflow.Functi"
  "onDef\022)\n\010gradient\030\002 \003(\0132\027.tensorflow.Gra"
  "dientDef\"\304\006\n\013FunctionDef\022$\n\tsignature\030\001 "
  "\001(\0132\021.tensorflow.OpDef\022/\n\004attr\030\005 \003(\0132!.t"
  "ensorflow.FunctionDef.AttrEntry\0226\n\010arg_a"
  "ttr\030\007 \003(\0132$.tensorflow.FunctionDef.ArgAt"
  "trEntry\022P\n\026resource_arg_unique_id\030\010 \003(\0132"
  "0.tensorflow.FunctionDef.ResourceArgUniq"
  "ueIdEntry\022%\n\010node_def\030\003 \003(\0132\023.tensorflow"
  ".NodeDef\022-\n\003ret\030\004 \003(\0132 .tensorflow.Funct"
  "ionDef.RetEntry\022<\n\013control_ret\030\006 \003(\0132\'.t"
  "ensorflow.FunctionDef.ControlRetEntry\032B\n"
  "\tAttrEntry\022\013\n\003key\030\001 \001(\t\022$\n\005value\030\002 \001(\0132\025"
  ".tensorflow.AttrValue:\0028\001\032\210\001\n\010ArgAttrs\0228"
  "\n\004attr\030\001 \003(\0132*.tensorflow.FunctionDef.Ar"
  "gAttrs.AttrEntry\032B\n\tAttrEntry\022\013\n\003key\030\001 \001"
  "(\t\022$\n\005value\030\002 \001(\0132\025.tensorflow.AttrValue"
  ":\0028\001\032P\n\014ArgAttrEntry\022\013\n\003key\030\001 \001(\r\022/\n\005val"
  "ue\030\002 \001(\0132 .tensorflow.FunctionDef.ArgAtt"
  "rs:\0028\001\032:\n\030ResourceArgUniqueIdEntry\022\013\n\003ke"
  "y\030\001 \001(\r\022\r\n\005value\030\002 \001(\r:\0028\001\032*\n\010RetEntry\022\013"
  "\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\0321\n\017Contro"
  "lRetEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028"
  "\001J\004\010\002\020\003\";\n\013GradientDef\022\025\n\rfunction_name\030"
  "\001 \001(\t\022\025\n\rgradient_func\030\002 \001(\tB\200\001\n\030org.ten"
  "sorflow.frameworkB\016FunctionProtosP\001ZOgit"
  "hub.com/tensorflow/tensorflow/tensorflow"
  "/go/core/framework/function_go_proto\370\001\001b"
  "\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_tensorflow_2fcore_2fframework_2ffunction_2eproto_deps[3] = {
  &::descriptor_table_tensorflow_2fcore_2fframework_2fattr_5fvalue_2eproto,
  &::descriptor_table_tensorflow_2fcore_2fframework_2fnode_5fdef_2eproto,
  &::descriptor_table_tensorflow_2fcore_2fframework_2fop_5fdef_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_tensorflow_2fcore_2fframework_2ffunction_2eproto_sccs[10] = {
  &scc_info_FunctionDef_tensorflow_2fcore_2fframework_2ffunction_2eproto.base,
  &scc_info_FunctionDef_ArgAttrEntry_DoNotUse_tensorflow_2fcore_2fframework_2ffunction_2eproto.base,
  &scc_info_FunctionDef_ArgAttrs_tensorflow_2fcore_2fframework_2ffunction_2eproto.base,
  &scc_info_FunctionDef_ArgAttrs_AttrEntry_DoNotUse_tensorflow_2fcore_2fframework_2ffunction_2eproto.base,
  &scc_info_FunctionDef_AttrEntry_DoNotUse_tensorflow_2fcore_2fframework_2ffunction_2eproto.base,
  &scc_info_FunctionDef_ControlRetEntry_DoNotUse_tensorflow_2fcore_2fframework_2ffunction_2eproto.base,
  &scc_info_FunctionDef_ResourceArgUniqueIdEntry_DoNotUse_tensorflow_2fcore_2fframework_2ffunction_2eproto.base,
  &scc_info_FunctionDef_RetEntry_DoNotUse_tensorflow_2fcore_2fframework_2ffunction_2eproto.base,
  &scc_info_FunctionDefLibrary_tensorflow_2fcore_2fframework_2ffunction_2eproto.base,
  &scc_info_GradientDef_tensorflow_2fcore_2fframework_2ffunction_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_tensorflow_2fcore_2fframework_2ffunction_2eproto_once;
static bool descriptor_table_tensorflow_2fcore_2fframework_2ffunction_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_tensorflow_2fcore_2fframework_2ffunction_2eproto = {
  &descriptor_table_tensorflow_2fcore_2fframework_2ffunction_2eproto_initialized, descriptor_table_protodef_tensorflow_2fcore_2fframework_2ffunction_2eproto, "tensorflow/core/framework/function.proto", 1327,
  &descriptor_table_tensorflow_2fcore_2fframework_2ffunction_2eproto_once, descriptor_table_tensorflow_2fcore_2fframework_2ffunction_2eproto_sccs, descriptor_table_tensorflow_2fcore_2fframework_2ffunction_2eproto_deps, 10, 3,
  schemas, file_default_instances, TableStruct_tensorflow_2fcore_2fframework_2ffunction_2eproto::offsets,
  file_level_metadata_tensorflow_2fcore_2fframework_2ffunction_2eproto, 10, file_level_enum_descriptors_tensorflow_2fcore_2fframework_2ffunction_2eproto, file_level_service_descriptors_tensorflow_2fcore_2fframework_2ffunction_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_tensorflow_2fcore_2fframework_2ffunction_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_tensorflow_2fcore_2fframework_2ffunction_2eproto), true);
namespace tensorflow {

// ===================================================================

void FunctionDefLibrary::InitAsDefaultInstance() {
}
class FunctionDefLibrary::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FunctionDefLibrary::kFunctionFieldNumber;
const int FunctionDefLibrary::kGradientFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FunctionDefLibrary::FunctionDefLibrary()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.FunctionDefLibrary)
}
FunctionDefLibrary::FunctionDefLibrary(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
  _internal_metadata_(arena),
  function_(arena),
  gradient_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.FunctionDefLibrary)
}
FunctionDefLibrary::FunctionDefLibrary(const FunctionDefLibrary& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      function_(from.function_),
      gradient_(from.gradient_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:tensorflow.FunctionDefLibrary)
}

void FunctionDefLibrary::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_FunctionDefLibrary_tensorflow_2fcore_2fframework_2ffunction_2eproto.base);
}

FunctionDefLibrary::~FunctionDefLibrary() {
  // @@protoc_insertion_point(destructor:tensorflow.FunctionDefLibrary)
  SharedDtor();
}

void FunctionDefLibrary::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == nullptr);
}

void FunctionDefLibrary::ArenaDtor(void* object) {
  FunctionDefLibrary* _this = reinterpret_cast< FunctionDefLibrary* >(object);
  (void)_this;
}
void FunctionDefLibrary::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void FunctionDefLibrary::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const FunctionDefLibrary& FunctionDefLibrary::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_FunctionDefLibrary_tensorflow_2fcore_2fframework_2ffunction_2eproto.base);
  return *internal_default_instance();
}


void FunctionDefLibrary::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.FunctionDefLibrary)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  function_.Clear();
  gradient_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* FunctionDefLibrary::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArenaNoVirtual(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .tensorflow.FunctionDef function = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(add_function(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 10);
        } else goto handle_unusual;
        continue;
      // repeated .tensorflow.GradientDef gradient = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(add_gradient(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 18);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool FunctionDefLibrary::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.FunctionDefLibrary)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .tensorflow.FunctionDef function = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_function()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .tensorflow.GradientDef gradient = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_gradient()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.FunctionDefLibrary)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.FunctionDefLibrary)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void FunctionDefLibrary::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.FunctionDefLibrary)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .tensorflow.FunctionDef function = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->function_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->function(static_cast<int>(i)),
      output);
  }

  // repeated .tensorflow.GradientDef gradient = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->gradient_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->gradient(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.FunctionDefLibrary)
}

::PROTOBUF_NAMESPACE_ID::uint8* FunctionDefLibrary::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.FunctionDefLibrary)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .tensorflow.FunctionDef function = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->function_size()); i < n; i++) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->function(static_cast<int>(i)), target);
  }

  // repeated .tensorflow.GradientDef gradient = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->gradient_size()); i < n; i++) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->gradient(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.FunctionDefLibrary)
  return target;
}

size_t FunctionDefLibrary::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.FunctionDefLibrary)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .tensorflow.FunctionDef function = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->function_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->function(static_cast<int>(i)));
    }
  }

  // repeated .tensorflow.GradientDef gradient = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->gradient_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->gradient(static_cast<int>(i)));
    }
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FunctionDefLibrary::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.FunctionDefLibrary)
  GOOGLE_DCHECK_NE(&from, this);
  const FunctionDefLibrary* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<FunctionDefLibrary>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.FunctionDefLibrary)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.FunctionDefLibrary)
    MergeFrom(*source);
  }
}

void FunctionDefLibrary::MergeFrom(const FunctionDefLibrary& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.FunctionDefLibrary)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  function_.MergeFrom(from.function_);
  gradient_.MergeFrom(from.gradient_);
}

void FunctionDefLibrary::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.FunctionDefLibrary)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FunctionDefLibrary::CopyFrom(const FunctionDefLibrary& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.FunctionDefLibrary)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FunctionDefLibrary::IsInitialized() const {
  return true;
}

void FunctionDefLibrary::Swap(FunctionDefLibrary* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    FunctionDefLibrary* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == nullptr) {
      delete temp;
    }
  }
}
void FunctionDefLibrary::UnsafeArenaSwap(FunctionDefLibrary* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void FunctionDefLibrary::InternalSwap(FunctionDefLibrary* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&function_)->InternalSwap(CastToBase(&other->function_));
  CastToBase(&gradient_)->InternalSwap(CastToBase(&other->gradient_));
}

::PROTOBUF_NAMESPACE_ID::Metadata FunctionDefLibrary::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

FunctionDef_AttrEntry_DoNotUse::FunctionDef_AttrEntry_DoNotUse() {}
FunctionDef_AttrEntry_DoNotUse::FunctionDef_AttrEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void FunctionDef_AttrEntry_DoNotUse::MergeFrom(const FunctionDef_AttrEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata FunctionDef_AttrEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void FunctionDef_AttrEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

FunctionDef_ArgAttrs_AttrEntry_DoNotUse::FunctionDef_ArgAttrs_AttrEntry_DoNotUse() {}
FunctionDef_ArgAttrs_AttrEntry_DoNotUse::FunctionDef_ArgAttrs_AttrEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void FunctionDef_ArgAttrs_AttrEntry_DoNotUse::MergeFrom(const FunctionDef_ArgAttrs_AttrEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata FunctionDef_ArgAttrs_AttrEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void FunctionDef_ArgAttrs_AttrEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

void FunctionDef_ArgAttrs::InitAsDefaultInstance() {
}
class FunctionDef_ArgAttrs::HasBitSetters {
 public:
};

void FunctionDef_ArgAttrs::clear_attr() {
  attr_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FunctionDef_ArgAttrs::kAttrFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FunctionDef_ArgAttrs::FunctionDef_ArgAttrs()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.FunctionDef.ArgAttrs)
}
FunctionDef_ArgAttrs::FunctionDef_ArgAttrs(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
  _internal_metadata_(arena),
  attr_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.FunctionDef.ArgAttrs)
}
FunctionDef_ArgAttrs::FunctionDef_ArgAttrs(const FunctionDef_ArgAttrs& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  attr_.MergeFrom(from.attr_);
  // @@protoc_insertion_point(copy_constructor:tensorflow.FunctionDef.ArgAttrs)
}

void FunctionDef_ArgAttrs::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_FunctionDef_ArgAttrs_tensorflow_2fcore_2fframework_2ffunction_2eproto.base);
}

FunctionDef_ArgAttrs::~FunctionDef_ArgAttrs() {
  // @@protoc_insertion_point(destructor:tensorflow.FunctionDef.ArgAttrs)
  SharedDtor();
}

void FunctionDef_ArgAttrs::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == nullptr);
}

void FunctionDef_ArgAttrs::ArenaDtor(void* object) {
  FunctionDef_ArgAttrs* _this = reinterpret_cast< FunctionDef_ArgAttrs* >(object);
  (void)_this;
}
void FunctionDef_ArgAttrs::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void FunctionDef_ArgAttrs::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const FunctionDef_ArgAttrs& FunctionDef_ArgAttrs::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_FunctionDef_ArgAttrs_tensorflow_2fcore_2fframework_2ffunction_2eproto.base);
  return *internal_default_instance();
}


void FunctionDef_ArgAttrs::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.FunctionDef.ArgAttrs)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  attr_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* FunctionDef_ArgAttrs::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArenaNoVirtual(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // map<string, .tensorflow.AttrValue> attr = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&attr_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 10);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool FunctionDef_ArgAttrs::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.FunctionDef.ArgAttrs)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // map<string, .tensorflow.AttrValue> attr = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          FunctionDef_ArgAttrs_AttrEntry_DoNotUse::Parser< ::PROTOBUF_NAMESPACE_ID::internal::MapField<
              FunctionDef_ArgAttrs_AttrEntry_DoNotUse,
              std::string, ::tensorflow::AttrValue,
              ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
              ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::tensorflow::AttrValue > > parser(&attr_);
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE,
            "tensorflow.FunctionDef.ArgAttrs.AttrEntry.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.FunctionDef.ArgAttrs)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.FunctionDef.ArgAttrs)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void FunctionDef_ArgAttrs::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.FunctionDef.ArgAttrs)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, .tensorflow.AttrValue> attr = 1;
  if (!this->attr().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::tensorflow::AttrValue >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "tensorflow.FunctionDef.ArgAttrs.AttrEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->attr().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->attr().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::tensorflow::AttrValue >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::tensorflow::AttrValue >::const_iterator
          it = this->attr().begin();
          it != this->attr().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        FunctionDef_ArgAttrs_AttrEntry_DoNotUse::MapEntryWrapper entry(nullptr, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second);
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(1, entry, output);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::tensorflow::AttrValue >::const_iterator
          it = this->attr().begin();
          it != this->attr().end(); ++it) {
        FunctionDef_ArgAttrs_AttrEntry_DoNotUse::MapEntryWrapper entry(nullptr, it->first, it->second);
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(1, entry, output);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.FunctionDef.ArgAttrs)
}

::PROTOBUF_NAMESPACE_ID::uint8* FunctionDef_ArgAttrs::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.FunctionDef.ArgAttrs)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, .tensorflow.AttrValue> attr = 1;
  if (!this->attr().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::tensorflow::AttrValue >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "tensorflow.FunctionDef.ArgAttrs.AttrEntry.key");
      }
    };

    if (false &&
        this->attr().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->attr().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::tensorflow::AttrValue >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::tensorflow::AttrValue >::const_iterator
          it = this->attr().begin();
          it != this->attr().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        FunctionDef_ArgAttrs_AttrEntry_DoNotUse::MapEntryWrapper entry(nullptr, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second);
        target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::InternalWriteMessageNoVirtualToArray(1, entry, target);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::tensorflow::AttrValue >::const_iterator
          it = this->attr().begin();
          it != this->attr().end(); ++it) {
        FunctionDef_ArgAttrs_AttrEntry_DoNotUse::MapEntryWrapper entry(nullptr, it->first, it->second);
        target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::InternalWriteMessageNoVirtualToArray(1, entry, target);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.FunctionDef.ArgAttrs)
  return target;
}

size_t FunctionDef_ArgAttrs::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.FunctionDef.ArgAttrs)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, .tensorflow.AttrValue> attr = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->attr_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::tensorflow::AttrValue >::const_iterator
      it = this->attr().begin();
      it != this->attr().end(); ++it) {
    FunctionDef_ArgAttrs_AttrEntry_DoNotUse::MapEntryWrapper entry(nullptr, it->first, it->second);
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        MessageSizeNoVirtual(entry);
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FunctionDef_ArgAttrs::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.FunctionDef.ArgAttrs)
  GOOGLE_DCHECK_NE(&from, this);
  const FunctionDef_ArgAttrs* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<FunctionDef_ArgAttrs>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.FunctionDef.ArgAttrs)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.FunctionDef.ArgAttrs)
    MergeFrom(*source);
  }
}

void FunctionDef_ArgAttrs::MergeFrom(const FunctionDef_ArgAttrs& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.FunctionDef.ArgAttrs)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  attr_.MergeFrom(from.attr_);
}

void FunctionDef_ArgAttrs::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.FunctionDef.ArgAttrs)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FunctionDef_ArgAttrs::CopyFrom(const FunctionDef_ArgAttrs& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.FunctionDef.ArgAttrs)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FunctionDef_ArgAttrs::IsInitialized() const {
  return true;
}

void FunctionDef_ArgAttrs::Swap(FunctionDef_ArgAttrs* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    FunctionDef_ArgAttrs* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == nullptr) {
      delete temp;
    }
  }
}
void FunctionDef_ArgAttrs::UnsafeArenaSwap(FunctionDef_ArgAttrs* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void FunctionDef_ArgAttrs::InternalSwap(FunctionDef_ArgAttrs* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  attr_.Swap(&other->attr_);
}

::PROTOBUF_NAMESPACE_ID::Metadata FunctionDef_ArgAttrs::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

FunctionDef_ArgAttrEntry_DoNotUse::FunctionDef_ArgAttrEntry_DoNotUse() {}
FunctionDef_ArgAttrEntry_DoNotUse::FunctionDef_ArgAttrEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void FunctionDef_ArgAttrEntry_DoNotUse::MergeFrom(const FunctionDef_ArgAttrEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata FunctionDef_ArgAttrEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void FunctionDef_ArgAttrEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

FunctionDef_ResourceArgUniqueIdEntry_DoNotUse::FunctionDef_ResourceArgUniqueIdEntry_DoNotUse() {}
FunctionDef_ResourceArgUniqueIdEntry_DoNotUse::FunctionDef_ResourceArgUniqueIdEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void FunctionDef_ResourceArgUniqueIdEntry_DoNotUse::MergeFrom(const FunctionDef_ResourceArgUniqueIdEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata FunctionDef_ResourceArgUniqueIdEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void FunctionDef_ResourceArgUniqueIdEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

FunctionDef_RetEntry_DoNotUse::FunctionDef_RetEntry_DoNotUse() {}
FunctionDef_RetEntry_DoNotUse::FunctionDef_RetEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void FunctionDef_RetEntry_DoNotUse::MergeFrom(const FunctionDef_RetEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata FunctionDef_RetEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void FunctionDef_RetEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

FunctionDef_ControlRetEntry_DoNotUse::FunctionDef_ControlRetEntry_DoNotUse() {}
FunctionDef_ControlRetEntry_DoNotUse::FunctionDef_ControlRetEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void FunctionDef_ControlRetEntry_DoNotUse::MergeFrom(const FunctionDef_ControlRetEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata FunctionDef_ControlRetEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void FunctionDef_ControlRetEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

void FunctionDef::InitAsDefaultInstance() {
  ::tensorflow::_FunctionDef_default_instance_._instance.get_mutable()->signature_ = const_cast< ::tensorflow::OpDef*>(
      ::tensorflow::OpDef::internal_default_instance());
}
class FunctionDef::HasBitSetters {
 public:
  static const ::tensorflow::OpDef& signature(const FunctionDef* msg);
};

const ::tensorflow::OpDef&
FunctionDef::HasBitSetters::signature(const FunctionDef* msg) {
  return *msg->signature_;
}
void FunctionDef::unsafe_arena_set_allocated_signature(
    ::tensorflow::OpDef* signature) {
  if (GetArenaNoVirtual() == nullptr) {
    delete signature_;
  }
  signature_ = signature;
  if (signature) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.FunctionDef.signature)
}
void FunctionDef::clear_signature() {
  if (GetArenaNoVirtual() == nullptr && signature_ != nullptr) {
    delete signature_;
  }
  signature_ = nullptr;
}
void FunctionDef::clear_attr() {
  attr_.Clear();
}
void FunctionDef::clear_node_def() {
  node_def_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FunctionDef::kSignatureFieldNumber;
const int FunctionDef::kAttrFieldNumber;
const int FunctionDef::kArgAttrFieldNumber;
const int FunctionDef::kResourceArgUniqueIdFieldNumber;
const int FunctionDef::kNodeDefFieldNumber;
const int FunctionDef::kRetFieldNumber;
const int FunctionDef::kControlRetFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FunctionDef::FunctionDef()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.FunctionDef)
}
FunctionDef::FunctionDef(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
  _internal_metadata_(arena),
  node_def_(arena),
  ret_(arena),
  attr_(arena),
  control_ret_(arena),
  arg_attr_(arena),
  resource_arg_unique_id_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.FunctionDef)
}
FunctionDef::FunctionDef(const FunctionDef& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      node_def_(from.node_def_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ret_.MergeFrom(from.ret_);
  attr_.MergeFrom(from.attr_);
  control_ret_.MergeFrom(from.control_ret_);
  arg_attr_.MergeFrom(from.arg_attr_);
  resource_arg_unique_id_.MergeFrom(from.resource_arg_unique_id_);
  if (from.has_signature()) {
    signature_ = new ::tensorflow::OpDef(*from.signature_);
  } else {
    signature_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:tensorflow.FunctionDef)
}

void FunctionDef::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_FunctionDef_tensorflow_2fcore_2fframework_2ffunction_2eproto.base);
  signature_ = nullptr;
}

FunctionDef::~FunctionDef() {
  // @@protoc_insertion_point(destructor:tensorflow.FunctionDef)
  SharedDtor();
}

void FunctionDef::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == nullptr);
  if (this != internal_default_instance()) delete signature_;
}

void FunctionDef::ArenaDtor(void* object) {
  FunctionDef* _this = reinterpret_cast< FunctionDef* >(object);
  (void)_this;
}
void FunctionDef::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void FunctionDef::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const FunctionDef& FunctionDef::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_FunctionDef_tensorflow_2fcore_2fframework_2ffunction_2eproto.base);
  return *internal_default_instance();
}


void FunctionDef::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.FunctionDef)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  node_def_.Clear();
  ret_.Clear();
  attr_.Clear();
  control_ret_.Clear();
  arg_attr_.Clear();
  resource_arg_unique_id_.Clear();
  if (GetArenaNoVirtual() == nullptr && signature_ != nullptr) {
    delete signature_;
  }
  signature_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* FunctionDef::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArenaNoVirtual(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .tensorflow.OpDef signature = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(mutable_signature(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .tensorflow.NodeDef node_def = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(add_node_def(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 26);
        } else goto handle_unusual;
        continue;
      // map<string, string> ret = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&ret_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 34);
        } else goto handle_unusual;
        continue;
      // map<string, .tensorflow.AttrValue> attr = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&attr_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 42);
        } else goto handle_unusual;
        continue;
      // map<string, string> control_ret = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&control_ret_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 50);
        } else goto handle_unusual;
        continue;
      // map<uint32, .tensorflow.FunctionDef.ArgAttrs> arg_attr = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&arg_attr_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 58);
        } else goto handle_unusual;
        continue;
      // map<uint32, uint32> resource_arg_unique_id = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&resource_arg_unique_id_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 66);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool FunctionDef::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.FunctionDef)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .tensorflow.OpDef signature = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_signature()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .tensorflow.NodeDef node_def = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (26 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_node_def()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, string> ret = 4;
      case 4: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (34 & 0xFF)) {
          FunctionDef_RetEntry_DoNotUse::Parser< ::PROTOBUF_NAMESPACE_ID::internal::MapField<
              FunctionDef_RetEntry_DoNotUse,
              std::string, std::string,
              ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
              ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string > > parser(&ret_);
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE,
            "tensorflow.FunctionDef.RetEntry.key"));
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE,
            "tensorflow.FunctionDef.RetEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, .tensorflow.AttrValue> attr = 5;
      case 5: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (42 & 0xFF)) {
          FunctionDef_AttrEntry_DoNotUse::Parser< ::PROTOBUF_NAMESPACE_ID::internal::MapField<
              FunctionDef_AttrEntry_DoNotUse,
              std::string, ::tensorflow::AttrValue,
              ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
              ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::tensorflow::AttrValue > > parser(&attr_);
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE,
            "tensorflow.FunctionDef.AttrEntry.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, string> control_ret = 6;
      case 6: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (50 & 0xFF)) {
          FunctionDef_ControlRetEntry_DoNotUse::Parser< ::PROTOBUF_NAMESPACE_ID::internal::MapField<
              FunctionDef_ControlRetEntry_DoNotUse,
              std::string, std::string,
              ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
              ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string > > parser(&control_ret_);
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE,
            "tensorflow.FunctionDef.ControlRetEntry.key"));
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE,
            "tensorflow.FunctionDef.ControlRetEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<uint32, .tensorflow.FunctionDef.ArgAttrs> arg_attr = 7;
      case 7: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (58 & 0xFF)) {
          FunctionDef_ArgAttrEntry_DoNotUse::Parser< ::PROTOBUF_NAMESPACE_ID::internal::MapField<
              FunctionDef_ArgAttrEntry_DoNotUse,
              ::PROTOBUF_NAMESPACE_ID::uint32, ::tensorflow::FunctionDef_ArgAttrs,
              ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_UINT32,
              ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::tensorflow::FunctionDef_ArgAttrs > > parser(&arg_attr_);
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<uint32, uint32> resource_arg_unique_id = 8;
      case 8: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (66 & 0xFF)) {
          FunctionDef_ResourceArgUniqueIdEntry_DoNotUse::Parser< ::PROTOBUF_NAMESPACE_ID::internal::MapField<
              FunctionDef_ResourceArgUniqueIdEntry_DoNotUse,
              ::PROTOBUF_NAMESPACE_ID::uint32, ::PROTOBUF_NAMESPACE_ID::uint32,
              ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_UINT32,
              ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_UINT32,
              0 >,
            ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::PROTOBUF_NAMESPACE_ID::uint32 > > parser(&resource_arg_unique_id_);
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.FunctionDef)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.FunctionDef)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void FunctionDef::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.FunctionDef)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .tensorflow.OpDef signature = 1;
  if (this->has_signature()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::signature(this), output);
  }

  // repeated .tensorflow.NodeDef node_def = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->node_def_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->node_def(static_cast<int>(i)),
      output);
  }

  // map<string, string> ret = 4;
  if (!this->ret().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "tensorflow.FunctionDef.RetEntry.key");
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "tensorflow.FunctionDef.RetEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->ret().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->ret().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->ret().begin();
          it != this->ret().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        FunctionDef_RetEntry_DoNotUse::MapEntryWrapper entry(nullptr, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second);
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(4, entry, output);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->ret().begin();
          it != this->ret().end(); ++it) {
        FunctionDef_RetEntry_DoNotUse::MapEntryWrapper entry(nullptr, it->first, it->second);
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(4, entry, output);
        Utf8Check::Check(&(*it));
      }
    }
  }

  // map<string, .tensorflow.AttrValue> attr = 5;
  if (!this->attr().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::tensorflow::AttrValue >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "tensorflow.FunctionDef.AttrEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->attr().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->attr().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::tensorflow::AttrValue >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::tensorflow::AttrValue >::const_iterator
          it = this->attr().begin();
          it != this->attr().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        FunctionDef_AttrEntry_DoNotUse::MapEntryWrapper entry(nullptr, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second);
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(5, entry, output);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::tensorflow::AttrValue >::const_iterator
          it = this->attr().begin();
          it != this->attr().end(); ++it) {
        FunctionDef_AttrEntry_DoNotUse::MapEntryWrapper entry(nullptr, it->first, it->second);
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(5, entry, output);
        Utf8Check::Check(&(*it));
      }
    }
  }

  // map<string, string> control_ret = 6;
  if (!this->control_ret().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "tensorflow.FunctionDef.ControlRetEntry.key");
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "tensorflow.FunctionDef.ControlRetEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->control_ret().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->control_ret().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->control_ret().begin();
          it != this->control_ret().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        FunctionDef_ControlRetEntry_DoNotUse::MapEntryWrapper entry(nullptr, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second);
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(6, entry, output);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->control_ret().begin();
          it != this->control_ret().end(); ++it) {
        FunctionDef_ControlRetEntry_DoNotUse::MapEntryWrapper entry(nullptr, it->first, it->second);
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(6, entry, output);
        Utf8Check::Check(&(*it));
      }
    }
  }

  // map<uint32, .tensorflow.FunctionDef.ArgAttrs> arg_attr = 7;
  if (!this->arg_attr().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::tensorflow::FunctionDef_ArgAttrs >::const_pointer
        ConstPtr;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::SortItem< ::PROTOBUF_NAMESPACE_ID::uint32, ConstPtr > SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->arg_attr().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->arg_attr().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::tensorflow::FunctionDef_ArgAttrs >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::tensorflow::FunctionDef_ArgAttrs >::const_iterator
          it = this->arg_attr().begin();
          it != this->arg_attr().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        FunctionDef_ArgAttrEntry_DoNotUse::MapEntryWrapper entry(nullptr, items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second);
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(7, entry, output);
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::tensorflow::FunctionDef_ArgAttrs >::const_iterator
          it = this->arg_attr().begin();
          it != this->arg_attr().end(); ++it) {
        FunctionDef_ArgAttrEntry_DoNotUse::MapEntryWrapper entry(nullptr, it->first, it->second);
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(7, entry, output);
      }
    }
  }

  // map<uint32, uint32> resource_arg_unique_id = 8;
  if (!this->resource_arg_unique_id().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::PROTOBUF_NAMESPACE_ID::uint32 >::const_pointer
        ConstPtr;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::SortItem< ::PROTOBUF_NAMESPACE_ID::uint32, ConstPtr > SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->resource_arg_unique_id().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->resource_arg_unique_id().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::PROTOBUF_NAMESPACE_ID::uint32 >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::PROTOBUF_NAMESPACE_ID::uint32 >::const_iterator
          it = this->resource_arg_unique_id().begin();
          it != this->resource_arg_unique_id().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        FunctionDef_ResourceArgUniqueIdEntry_DoNotUse::MapEntryWrapper entry(nullptr, items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second);
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(8, entry, output);
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::PROTOBUF_NAMESPACE_ID::uint32 >::const_iterator
          it = this->resource_arg_unique_id().begin();
          it != this->resource_arg_unique_id().end(); ++it) {
        FunctionDef_ResourceArgUniqueIdEntry_DoNotUse::MapEntryWrapper entry(nullptr, it->first, it->second);
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(8, entry, output);
      }
    }
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.FunctionDef)
}

::PROTOBUF_NAMESPACE_ID::uint8* FunctionDef::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.FunctionDef)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .tensorflow.OpDef signature = 1;
  if (this->has_signature()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::signature(this), target);
  }

  // repeated .tensorflow.NodeDef node_def = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->node_def_size()); i < n; i++) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->node_def(static_cast<int>(i)), target);
  }

  // map<string, string> ret = 4;
  if (!this->ret().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "tensorflow.FunctionDef.RetEntry.key");
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "tensorflow.FunctionDef.RetEntry.value");
      }
    };

    if (false &&
        this->ret().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->ret().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->ret().begin();
          it != this->ret().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        FunctionDef_RetEntry_DoNotUse::MapEntryWrapper entry(nullptr, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second);
        target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::InternalWriteMessageNoVirtualToArray(4, entry, target);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->ret().begin();
          it != this->ret().end(); ++it) {
        FunctionDef_RetEntry_DoNotUse::MapEntryWrapper entry(nullptr, it->first, it->second);
        target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::InternalWriteMessageNoVirtualToArray(4, entry, target);
        Utf8Check::Check(&(*it));
      }
    }
  }

  // map<string, .tensorflow.AttrValue> attr = 5;
  if (!this->attr().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::tensorflow::AttrValue >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "tensorflow.FunctionDef.AttrEntry.key");
      }
    };

    if (false &&
        this->attr().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->attr().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::tensorflow::AttrValue >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::tensorflow::AttrValue >::const_iterator
          it = this->attr().begin();
          it != this->attr().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        FunctionDef_AttrEntry_DoNotUse::MapEntryWrapper entry(nullptr, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second);
        target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::InternalWriteMessageNoVirtualToArray(5, entry, target);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::tensorflow::AttrValue >::const_iterator
          it = this->attr().begin();
          it != this->attr().end(); ++it) {
        FunctionDef_AttrEntry_DoNotUse::MapEntryWrapper entry(nullptr, it->first, it->second);
        target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::InternalWriteMessageNoVirtualToArray(5, entry, target);
        Utf8Check::Check(&(*it));
      }
    }
  }

  // map<string, string> control_ret = 6;
  if (!this->control_ret().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "tensorflow.FunctionDef.ControlRetEntry.key");
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "tensorflow.FunctionDef.ControlRetEntry.value");
      }
    };

    if (false &&
        this->control_ret().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->control_ret().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->control_ret().begin();
          it != this->control_ret().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        FunctionDef_ControlRetEntry_DoNotUse::MapEntryWrapper entry(nullptr, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second);
        target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::InternalWriteMessageNoVirtualToArray(6, entry, target);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->control_ret().begin();
          it != this->control_ret().end(); ++it) {
        FunctionDef_ControlRetEntry_DoNotUse::MapEntryWrapper entry(nullptr, it->first, it->second);
        target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::InternalWriteMessageNoVirtualToArray(6, entry, target);
        Utf8Check::Check(&(*it));
      }
    }
  }

  // map<uint32, .tensorflow.FunctionDef.ArgAttrs> arg_attr = 7;
  if (!this->arg_attr().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::tensorflow::FunctionDef_ArgAttrs >::const_pointer
        ConstPtr;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::SortItem< ::PROTOBUF_NAMESPACE_ID::uint32, ConstPtr > SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByFirstField<SortItem> Less;

    if (false &&
        this->arg_attr().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->arg_attr().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::tensorflow::FunctionDef_ArgAttrs >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::tensorflow::FunctionDef_ArgAttrs >::const_iterator
          it = this->arg_attr().begin();
          it != this->arg_attr().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        FunctionDef_ArgAttrEntry_DoNotUse::MapEntryWrapper entry(nullptr, items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second);
        target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::InternalWriteMessageNoVirtualToArray(7, entry, target);
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::tensorflow::FunctionDef_ArgAttrs >::const_iterator
          it = this->arg_attr().begin();
          it != this->arg_attr().end(); ++it) {
        FunctionDef_ArgAttrEntry_DoNotUse::MapEntryWrapper entry(nullptr, it->first, it->second);
        target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::InternalWriteMessageNoVirtualToArray(7, entry, target);
      }
    }
  }

  // map<uint32, uint32> resource_arg_unique_id = 8;
  if (!this->resource_arg_unique_id().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::PROTOBUF_NAMESPACE_ID::uint32 >::const_pointer
        ConstPtr;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::SortItem< ::PROTOBUF_NAMESPACE_ID::uint32, ConstPtr > SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByFirstField<SortItem> Less;

    if (false &&
        this->resource_arg_unique_id().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->resource_arg_unique_id().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::PROTOBUF_NAMESPACE_ID::uint32 >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::PROTOBUF_NAMESPACE_ID::uint32 >::const_iterator
          it = this->resource_arg_unique_id().begin();
          it != this->resource_arg_unique_id().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        FunctionDef_ResourceArgUniqueIdEntry_DoNotUse::MapEntryWrapper entry(nullptr, items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second);
        target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::InternalWriteMessageNoVirtualToArray(8, entry, target);
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::PROTOBUF_NAMESPACE_ID::uint32 >::const_iterator
          it = this->resource_arg_unique_id().begin();
          it != this->resource_arg_unique_id().end(); ++it) {
        FunctionDef_ResourceArgUniqueIdEntry_DoNotUse::MapEntryWrapper entry(nullptr, it->first, it->second);
        target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::InternalWriteMessageNoVirtualToArray(8, entry, target);
      }
    }
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.FunctionDef)
  return target;
}

size_t FunctionDef::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.FunctionDef)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .tensorflow.NodeDef node_def = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->node_def_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->node_def(static_cast<int>(i)));
    }
  }

  // map<string, string> ret = 4;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->ret_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
      it = this->ret().begin();
      it != this->ret().end(); ++it) {
    FunctionDef_RetEntry_DoNotUse::MapEntryWrapper entry(nullptr, it->first, it->second);
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        MessageSizeNoVirtual(entry);
  }

  // map<string, .tensorflow.AttrValue> attr = 5;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->attr_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::tensorflow::AttrValue >::const_iterator
      it = this->attr().begin();
      it != this->attr().end(); ++it) {
    FunctionDef_AttrEntry_DoNotUse::MapEntryWrapper entry(nullptr, it->first, it->second);
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        MessageSizeNoVirtual(entry);
  }

  // map<string, string> control_ret = 6;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->control_ret_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
      it = this->control_ret().begin();
      it != this->control_ret().end(); ++it) {
    FunctionDef_ControlRetEntry_DoNotUse::MapEntryWrapper entry(nullptr, it->first, it->second);
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        MessageSizeNoVirtual(entry);
  }

  // map<uint32, .tensorflow.FunctionDef.ArgAttrs> arg_attr = 7;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->arg_attr_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::tensorflow::FunctionDef_ArgAttrs >::const_iterator
      it = this->arg_attr().begin();
      it != this->arg_attr().end(); ++it) {
    FunctionDef_ArgAttrEntry_DoNotUse::MapEntryWrapper entry(nullptr, it->first, it->second);
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        MessageSizeNoVirtual(entry);
  }

  // map<uint32, uint32> resource_arg_unique_id = 8;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->resource_arg_unique_id_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::uint32, ::PROTOBUF_NAMESPACE_ID::uint32 >::const_iterator
      it = this->resource_arg_unique_id().begin();
      it != this->resource_arg_unique_id().end(); ++it) {
    FunctionDef_ResourceArgUniqueIdEntry_DoNotUse::MapEntryWrapper entry(nullptr, it->first, it->second);
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        MessageSizeNoVirtual(entry);
  }

  // .tensorflow.OpDef signature = 1;
  if (this->has_signature()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *signature_);
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FunctionDef::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.FunctionDef)
  GOOGLE_DCHECK_NE(&from, this);
  const FunctionDef* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<FunctionDef>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.FunctionDef)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.FunctionDef)
    MergeFrom(*source);
  }
}

void FunctionDef::MergeFrom(const FunctionDef& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.FunctionDef)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  node_def_.MergeFrom(from.node_def_);
  ret_.MergeFrom(from.ret_);
  attr_.MergeFrom(from.attr_);
  control_ret_.MergeFrom(from.control_ret_);
  arg_attr_.MergeFrom(from.arg_attr_);
  resource_arg_unique_id_.MergeFrom(from.resource_arg_unique_id_);
  if (from.has_signature()) {
    mutable_signature()->::tensorflow::OpDef::MergeFrom(from.signature());
  }
}

void FunctionDef::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.FunctionDef)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FunctionDef::CopyFrom(const FunctionDef& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.FunctionDef)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FunctionDef::IsInitialized() const {
  return true;
}

void FunctionDef::Swap(FunctionDef* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    FunctionDef* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == nullptr) {
      delete temp;
    }
  }
}
void FunctionDef::UnsafeArenaSwap(FunctionDef* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void FunctionDef::InternalSwap(FunctionDef* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&node_def_)->InternalSwap(CastToBase(&other->node_def_));
  ret_.Swap(&other->ret_);
  attr_.Swap(&other->attr_);
  control_ret_.Swap(&other->control_ret_);
  arg_attr_.Swap(&other->arg_attr_);
  resource_arg_unique_id_.Swap(&other->resource_arg_unique_id_);
  swap(signature_, other->signature_);
}

::PROTOBUF_NAMESPACE_ID::Metadata FunctionDef::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GradientDef::InitAsDefaultInstance() {
}
class GradientDef::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GradientDef::kFunctionNameFieldNumber;
const int GradientDef::kGradientFuncFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GradientDef::GradientDef()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.GradientDef)
}
GradientDef::GradientDef(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
  _internal_metadata_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.GradientDef)
}
GradientDef::GradientDef(const GradientDef& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  function_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.function_name().size() > 0) {
    function_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.function_name(),
      GetArenaNoVirtual());
  }
  gradient_func_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.gradient_func().size() > 0) {
    gradient_func_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.gradient_func(),
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(copy_constructor:tensorflow.GradientDef)
}

void GradientDef::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GradientDef_tensorflow_2fcore_2fframework_2ffunction_2eproto.base);
  function_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  gradient_func_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

GradientDef::~GradientDef() {
  // @@protoc_insertion_point(destructor:tensorflow.GradientDef)
  SharedDtor();
}

void GradientDef::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == nullptr);
  function_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  gradient_func_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GradientDef::ArenaDtor(void* object) {
  GradientDef* _this = reinterpret_cast< GradientDef* >(object);
  (void)_this;
}
void GradientDef::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GradientDef::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GradientDef& GradientDef::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GradientDef_tensorflow_2fcore_2fframework_2ffunction_2eproto.base);
  return *internal_default_instance();
}


void GradientDef::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.GradientDef)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  function_name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  gradient_func_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* GradientDef::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArenaNoVirtual(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string function_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(mutable_function_name(), ptr, ctx, "tensorflow.GradientDef.function_name");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string gradient_func = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(mutable_gradient_func(), ptr, ctx, "tensorflow.GradientDef.gradient_func");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool GradientDef::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.GradientDef)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string function_name = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_function_name()));
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
            this->function_name().data(), static_cast<int>(this->function_name().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE,
            "tensorflow.GradientDef.function_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string gradient_func = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_gradient_func()));
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
            this->gradient_func().data(), static_cast<int>(this->gradient_func().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE,
            "tensorflow.GradientDef.gradient_func"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.GradientDef)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.GradientDef)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void GradientDef::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.GradientDef)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string function_name = 1;
  if (this->function_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->function_name().data(), static_cast<int>(this->function_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "tensorflow.GradientDef.function_name");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->function_name(), output);
  }

  // string gradient_func = 2;
  if (this->gradient_func().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->gradient_func().data(), static_cast<int>(this->gradient_func().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "tensorflow.GradientDef.gradient_func");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->gradient_func(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.GradientDef)
}

::PROTOBUF_NAMESPACE_ID::uint8* GradientDef::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.GradientDef)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string function_name = 1;
  if (this->function_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->function_name().data(), static_cast<int>(this->function_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "tensorflow.GradientDef.function_name");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        1, this->function_name(), target);
  }

  // string gradient_func = 2;
  if (this->gradient_func().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->gradient_func().data(), static_cast<int>(this->gradient_func().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "tensorflow.GradientDef.gradient_func");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        2, this->gradient_func(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.GradientDef)
  return target;
}

size_t GradientDef::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.GradientDef)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string function_name = 1;
  if (this->function_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->function_name());
  }

  // string gradient_func = 2;
  if (this->gradient_func().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->gradient_func());
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GradientDef::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.GradientDef)
  GOOGLE_DCHECK_NE(&from, this);
  const GradientDef* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GradientDef>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.GradientDef)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.GradientDef)
    MergeFrom(*source);
  }
}

void GradientDef::MergeFrom(const GradientDef& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.GradientDef)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.function_name().size() > 0) {
    set_function_name(from.function_name());
  }
  if (from.gradient_func().size() > 0) {
    set_gradient_func(from.gradient_func());
  }
}

void GradientDef::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.GradientDef)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GradientDef::CopyFrom(const GradientDef& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.GradientDef)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GradientDef::IsInitialized() const {
  return true;
}

void GradientDef::Swap(GradientDef* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    GradientDef* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == nullptr) {
      delete temp;
    }
  }
}
void GradientDef::UnsafeArenaSwap(GradientDef* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void GradientDef::InternalSwap(GradientDef* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  function_name_.Swap(&other->function_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  gradient_func_.Swap(&other->gradient_func_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::PROTOBUF_NAMESPACE_ID::Metadata GradientDef::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace tensorflow
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::tensorflow::FunctionDefLibrary* Arena::CreateMaybeMessage< ::tensorflow::FunctionDefLibrary >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tensorflow::FunctionDefLibrary >(arena);
}
template<> PROTOBUF_NOINLINE ::tensorflow::FunctionDef_AttrEntry_DoNotUse* Arena::CreateMaybeMessage< ::tensorflow::FunctionDef_AttrEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tensorflow::FunctionDef_AttrEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::tensorflow::FunctionDef_ArgAttrs_AttrEntry_DoNotUse* Arena::CreateMaybeMessage< ::tensorflow::FunctionDef_ArgAttrs_AttrEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tensorflow::FunctionDef_ArgAttrs_AttrEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::tensorflow::FunctionDef_ArgAttrs* Arena::CreateMaybeMessage< ::tensorflow::FunctionDef_ArgAttrs >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tensorflow::FunctionDef_ArgAttrs >(arena);
}
template<> PROTOBUF_NOINLINE ::tensorflow::FunctionDef_ArgAttrEntry_DoNotUse* Arena::CreateMaybeMessage< ::tensorflow::FunctionDef_ArgAttrEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tensorflow::FunctionDef_ArgAttrEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::tensorflow::FunctionDef_ResourceArgUniqueIdEntry_DoNotUse* Arena::CreateMaybeMessage< ::tensorflow::FunctionDef_ResourceArgUniqueIdEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tensorflow::FunctionDef_ResourceArgUniqueIdEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::tensorflow::FunctionDef_RetEntry_DoNotUse* Arena::CreateMaybeMessage< ::tensorflow::FunctionDef_RetEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tensorflow::FunctionDef_RetEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::tensorflow::FunctionDef_ControlRetEntry_DoNotUse* Arena::CreateMaybeMessage< ::tensorflow::FunctionDef_ControlRetEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tensorflow::FunctionDef_ControlRetEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::tensorflow::FunctionDef* Arena::CreateMaybeMessage< ::tensorflow::FunctionDef >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tensorflow::FunctionDef >(arena);
}
template<> PROTOBUF_NOINLINE ::tensorflow::GradientDef* Arena::CreateMaybeMessage< ::tensorflow::GradientDef >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tensorflow::GradientDef >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>

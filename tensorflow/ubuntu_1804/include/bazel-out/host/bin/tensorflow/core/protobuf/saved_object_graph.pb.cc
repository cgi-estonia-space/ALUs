// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tensorflow/core/protobuf/saved_object_graph.proto

#include "tensorflow/core/protobuf/saved_object_graph.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_tensorflow_2fcore_2fprotobuf_2fstruct_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<3> scc_info_DictValue_tensorflow_2fcore_2fprotobuf_2fstruct_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_FunctionSpec_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SavedAsset_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SavedBareConcreteFunction_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SavedConcreteFunction_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SavedConstant_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SavedFunction_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<9> scc_info_SavedObject_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SavedObjectGraph_ConcreteFunctionsEntry_DoNotUse_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SavedResource_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SavedUserObject_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SavedVariable_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_tensorflow_2fcore_2fframework_2ftensor_5fshape_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_TensorShapeProto_tensorflow_2fcore_2fframework_2ftensor_5fshape_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_tensorflow_2fcore_2fprotobuf_2ftrackable_5fobject_5fgraph_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_TrackableObjectGraph_TrackableObject_ObjectReference_tensorflow_2fcore_2fprotobuf_2ftrackable_5fobject_5fgraph_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_tensorflow_2fcore_2fprotobuf_2ftrackable_5fobject_5fgraph_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_TrackableObjectGraph_TrackableObject_SlotVariableReference_tensorflow_2fcore_2fprotobuf_2ftrackable_5fobject_5fgraph_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_tensorflow_2fcore_2fframework_2fversions_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_VersionDef_tensorflow_2fcore_2fframework_2fversions_2eproto;
namespace tensorflow {
class SavedObjectGraph_ConcreteFunctionsEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SavedObjectGraph_ConcreteFunctionsEntry_DoNotUse> _instance;
} _SavedObjectGraph_ConcreteFunctionsEntry_DoNotUse_default_instance_;
class SavedObjectGraphDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SavedObjectGraph> _instance;
} _SavedObjectGraph_default_instance_;
class SavedObjectDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SavedObject> _instance;
  const ::tensorflow::SavedUserObject* user_object_;
  const ::tensorflow::SavedAsset* asset_;
  const ::tensorflow::SavedFunction* function_;
  const ::tensorflow::SavedVariable* variable_;
  const ::tensorflow::SavedBareConcreteFunction* bare_concrete_function_;
  const ::tensorflow::SavedConstant* constant_;
  const ::tensorflow::SavedResource* resource_;
} _SavedObject_default_instance_;
class SavedUserObjectDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SavedUserObject> _instance;
} _SavedUserObject_default_instance_;
class SavedAssetDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SavedAsset> _instance;
} _SavedAsset_default_instance_;
class SavedFunctionDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SavedFunction> _instance;
} _SavedFunction_default_instance_;
class SavedConcreteFunctionDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SavedConcreteFunction> _instance;
} _SavedConcreteFunction_default_instance_;
class SavedBareConcreteFunctionDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SavedBareConcreteFunction> _instance;
} _SavedBareConcreteFunction_default_instance_;
class SavedConstantDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SavedConstant> _instance;
} _SavedConstant_default_instance_;
class SavedVariableDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SavedVariable> _instance;
} _SavedVariable_default_instance_;
class FunctionSpecDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<FunctionSpec> _instance;
} _FunctionSpec_default_instance_;
class SavedResourceDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SavedResource> _instance;
} _SavedResource_default_instance_;
}  // namespace tensorflow
static void InitDefaultsscc_info_FunctionSpec_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::_FunctionSpec_default_instance_;
    new (ptr) ::tensorflow::FunctionSpec();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::FunctionSpec::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_FunctionSpec_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsscc_info_FunctionSpec_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto}, {
      &scc_info_DictValue_tensorflow_2fcore_2fprotobuf_2fstruct_2eproto.base,}};

static void InitDefaultsscc_info_SavedAsset_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::_SavedAsset_default_instance_;
    new (ptr) ::tensorflow::SavedAsset();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::SavedAsset::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SavedAsset_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_SavedAsset_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto}, {}};

static void InitDefaultsscc_info_SavedBareConcreteFunction_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::_SavedBareConcreteFunction_default_instance_;
    new (ptr) ::tensorflow::SavedBareConcreteFunction();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::SavedBareConcreteFunction::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SavedBareConcreteFunction_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_SavedBareConcreteFunction_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto}, {}};

static void InitDefaultsscc_info_SavedConcreteFunction_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::_SavedConcreteFunction_default_instance_;
    new (ptr) ::tensorflow::SavedConcreteFunction();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::SavedConcreteFunction::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SavedConcreteFunction_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsscc_info_SavedConcreteFunction_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto}, {
      &scc_info_DictValue_tensorflow_2fcore_2fprotobuf_2fstruct_2eproto.base,}};

static void InitDefaultsscc_info_SavedConstant_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::_SavedConstant_default_instance_;
    new (ptr) ::tensorflow::SavedConstant();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::SavedConstant::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SavedConstant_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_SavedConstant_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto}, {}};

static void InitDefaultsscc_info_SavedFunction_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::_SavedFunction_default_instance_;
    new (ptr) ::tensorflow::SavedFunction();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::SavedFunction::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SavedFunction_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsscc_info_SavedFunction_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto}, {
      &scc_info_FunctionSpec_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto.base,}};

static void InitDefaultsscc_info_SavedObject_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::_SavedObject_default_instance_;
    new (ptr) ::tensorflow::SavedObject();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::SavedObject::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<9> scc_info_SavedObject_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 9, InitDefaultsscc_info_SavedObject_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto}, {
      &scc_info_TrackableObjectGraph_TrackableObject_ObjectReference_tensorflow_2fcore_2fprotobuf_2ftrackable_5fobject_5fgraph_2eproto.base,
      &scc_info_TrackableObjectGraph_TrackableObject_SlotVariableReference_tensorflow_2fcore_2fprotobuf_2ftrackable_5fobject_5fgraph_2eproto.base,
      &scc_info_SavedUserObject_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto.base,
      &scc_info_SavedAsset_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto.base,
      &scc_info_SavedFunction_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto.base,
      &scc_info_SavedVariable_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto.base,
      &scc_info_SavedBareConcreteFunction_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto.base,
      &scc_info_SavedConstant_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto.base,
      &scc_info_SavedResource_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto.base,}};

static void InitDefaultsscc_info_SavedObjectGraph_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::_SavedObjectGraph_default_instance_;
    new (ptr) ::tensorflow::SavedObjectGraph();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::SavedObjectGraph::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_SavedObjectGraph_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsscc_info_SavedObjectGraph_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto}, {
      &scc_info_SavedObject_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto.base,
      &scc_info_SavedObjectGraph_ConcreteFunctionsEntry_DoNotUse_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto.base,}};

static void InitDefaultsscc_info_SavedObjectGraph_ConcreteFunctionsEntry_DoNotUse_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::_SavedObjectGraph_ConcreteFunctionsEntry_DoNotUse_default_instance_;
    new (ptr) ::tensorflow::SavedObjectGraph_ConcreteFunctionsEntry_DoNotUse();
  }
  ::tensorflow::SavedObjectGraph_ConcreteFunctionsEntry_DoNotUse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SavedObjectGraph_ConcreteFunctionsEntry_DoNotUse_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsscc_info_SavedObjectGraph_ConcreteFunctionsEntry_DoNotUse_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto}, {
      &scc_info_SavedConcreteFunction_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto.base,}};

static void InitDefaultsscc_info_SavedResource_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::_SavedResource_default_instance_;
    new (ptr) ::tensorflow::SavedResource();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::SavedResource::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SavedResource_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_SavedResource_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto}, {}};

static void InitDefaultsscc_info_SavedUserObject_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::_SavedUserObject_default_instance_;
    new (ptr) ::tensorflow::SavedUserObject();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::SavedUserObject::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SavedUserObject_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsscc_info_SavedUserObject_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto}, {
      &scc_info_VersionDef_tensorflow_2fcore_2fframework_2fversions_2eproto.base,}};

static void InitDefaultsscc_info_SavedVariable_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tensorflow::_SavedVariable_default_instance_;
    new (ptr) ::tensorflow::SavedVariable();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::SavedVariable::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SavedVariable_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsscc_info_SavedVariable_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto}, {
      &scc_info_TensorShapeProto_tensorflow_2fcore_2fframework_2ftensor_5fshape_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto[12];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::tensorflow::SavedObjectGraph_ConcreteFunctionsEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::SavedObjectGraph_ConcreteFunctionsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::tensorflow::SavedObjectGraph_ConcreteFunctionsEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::SavedObjectGraph_ConcreteFunctionsEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::tensorflow::SavedObjectGraph, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::tensorflow::SavedObjectGraph, nodes_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::SavedObjectGraph, concrete_functions_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::tensorflow::SavedObject, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::tensorflow::SavedObject, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::tensorflow::SavedObject, children_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::SavedObject, slot_variables_),
  offsetof(::tensorflow::SavedObjectDefaultTypeInternal, user_object_),
  offsetof(::tensorflow::SavedObjectDefaultTypeInternal, asset_),
  offsetof(::tensorflow::SavedObjectDefaultTypeInternal, function_),
  offsetof(::tensorflow::SavedObjectDefaultTypeInternal, variable_),
  offsetof(::tensorflow::SavedObjectDefaultTypeInternal, bare_concrete_function_),
  offsetof(::tensorflow::SavedObjectDefaultTypeInternal, constant_),
  offsetof(::tensorflow::SavedObjectDefaultTypeInternal, resource_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::SavedObject, kind_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::tensorflow::SavedUserObject, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::tensorflow::SavedUserObject, identifier_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::SavedUserObject, version_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::SavedUserObject, metadata_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::tensorflow::SavedAsset, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::tensorflow::SavedAsset, asset_file_def_index_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::tensorflow::SavedFunction, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::tensorflow::SavedFunction, concrete_functions_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::SavedFunction, function_spec_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::tensorflow::SavedConcreteFunction, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::tensorflow::SavedConcreteFunction, bound_inputs_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::SavedConcreteFunction, canonicalized_input_signature_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::SavedConcreteFunction, output_signature_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::tensorflow::SavedBareConcreteFunction, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::tensorflow::SavedBareConcreteFunction, concrete_function_name_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::SavedBareConcreteFunction, argument_keywords_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::SavedBareConcreteFunction, allowed_positional_arguments_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::tensorflow::SavedConstant, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::tensorflow::SavedConstant, operation_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::tensorflow::SavedVariable, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::tensorflow::SavedVariable, dtype_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::SavedVariable, shape_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::SavedVariable, trainable_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::SavedVariable, synchronization_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::SavedVariable, aggregation_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::SavedVariable, name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::tensorflow::FunctionSpec, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::tensorflow::FunctionSpec, fullargspec_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::FunctionSpec, is_method_),
  PROTOBUF_FIELD_OFFSET(::tensorflow::FunctionSpec, input_signature_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::tensorflow::SavedResource, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::tensorflow::SavedResource, device_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 7, sizeof(::tensorflow::SavedObjectGraph_ConcreteFunctionsEntry_DoNotUse)},
  { 9, -1, sizeof(::tensorflow::SavedObjectGraph)},
  { 16, -1, sizeof(::tensorflow::SavedObject)},
  { 31, -1, sizeof(::tensorflow::SavedUserObject)},
  { 39, -1, sizeof(::tensorflow::SavedAsset)},
  { 45, -1, sizeof(::tensorflow::SavedFunction)},
  { 52, -1, sizeof(::tensorflow::SavedConcreteFunction)},
  { 60, -1, sizeof(::tensorflow::SavedBareConcreteFunction)},
  { 68, -1, sizeof(::tensorflow::SavedConstant)},
  { 74, -1, sizeof(::tensorflow::SavedVariable)},
  { 85, -1, sizeof(::tensorflow::FunctionSpec)},
  { 93, -1, sizeof(::tensorflow::SavedResource)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::tensorflow::_SavedObjectGraph_ConcreteFunctionsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::tensorflow::_SavedObjectGraph_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::tensorflow::_SavedObject_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::tensorflow::_SavedUserObject_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::tensorflow::_SavedAsset_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::tensorflow::_SavedFunction_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::tensorflow::_SavedConcreteFunction_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::tensorflow::_SavedBareConcreteFunction_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::tensorflow::_SavedConstant_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::tensorflow::_SavedVariable_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::tensorflow::_FunctionSpec_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::tensorflow::_SavedResource_default_instance_),
};

const char descriptor_table_protodef_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto[] =
  "\n1tensorflow/core/protobuf/saved_object_"
  "graph.proto\022\ntensorflow\032,tensorflow/core"
  "/framework/tensor_shape.proto\032%tensorflo"
  "w/core/framework/types.proto\032(tensorflow"
  "/core/framework/variable.proto\032(tensorfl"
  "ow/core/framework/versions.proto\032%tensor"
  "flow/core/protobuf/struct.proto\0325tensorf"
  "low/core/protobuf/trackable_object_graph"
  ".proto\"\350\001\n\020SavedObjectGraph\022&\n\005nodes\030\001 \003"
  "(\0132\027.tensorflow.SavedObject\022O\n\022concrete_"
  "functions\030\002 \003(\01323.tensorflow.SavedObject"
  "Graph.ConcreteFunctionsEntry\032[\n\026Concrete"
  "FunctionsEntry\022\013\n\003key\030\001 \001(\t\0220\n\005value\030\002 \001"
  "(\0132!.tensorflow.SavedConcreteFunction:\0028"
  "\001\"\275\004\n\013SavedObject\022R\n\010children\030\001 \003(\0132@.te"
  "nsorflow.TrackableObjectGraph.TrackableO"
  "bject.ObjectReference\022^\n\016slot_variables\030"
  "\003 \003(\0132F.tensorflow.TrackableObjectGraph."
  "TrackableObject.SlotVariableReference\0222\n"
  "\013user_object\030\004 \001(\0132\033.tensorflow.SavedUse"
  "rObjectH\000\022\'\n\005asset\030\005 \001(\0132\026.tensorflow.Sa"
  "vedAssetH\000\022-\n\010function\030\006 \001(\0132\031.tensorflo"
  "w.SavedFunctionH\000\022-\n\010variable\030\007 \001(\0132\031.te"
  "nsorflow.SavedVariableH\000\022G\n\026bare_concret"
  "e_function\030\010 \001(\0132%.tensorflow.SavedBareC"
  "oncreteFunctionH\000\022-\n\010constant\030\t \001(\0132\031.te"
  "nsorflow.SavedConstantH\000\022-\n\010resource\030\n \001"
  "(\0132\031.tensorflow.SavedResourceH\000B\006\n\004kindJ"
  "\004\010\002\020\003R\nattributes\"`\n\017SavedUserObject\022\022\n\n"
  "identifier\030\001 \001(\t\022\'\n\007version\030\002 \001(\0132\026.tens"
  "orflow.VersionDef\022\020\n\010metadata\030\003 \001(\t\"*\n\nS"
  "avedAsset\022\034\n\024asset_file_def_index\030\001 \001(\005\""
  "\\\n\rSavedFunction\022\032\n\022concrete_functions\030\001"
  " \003(\t\022/\n\rfunction_spec\030\002 \001(\0132\030.tensorflow"
  ".FunctionSpec\"\250\001\n\025SavedConcreteFunction\022"
  "\024\n\014bound_inputs\030\002 \003(\005\022B\n\035canonicalized_i"
  "nput_signature\030\003 \001(\0132\033.tensorflow.Struct"
  "uredValue\0225\n\020output_signature\030\004 \001(\0132\033.te"
  "nsorflow.StructuredValue\"|\n\031SavedBareCon"
  "creteFunction\022\036\n\026concrete_function_name\030"
  "\001 \001(\t\022\031\n\021argument_keywords\030\002 \003(\t\022$\n\034allo"
  "wed_positional_arguments\030\003 \001(\003\"\"\n\rSavedC"
  "onstant\022\021\n\toperation\030\001 \001(\t\"\366\001\n\rSavedVari"
  "able\022#\n\005dtype\030\001 \001(\0162\024.tensorflow.DataTyp"
  "e\022+\n\005shape\030\002 \001(\0132\034.tensorflow.TensorShap"
  "eProto\022\021\n\ttrainable\030\003 \001(\010\022<\n\017synchroniza"
  "tion\030\004 \001(\0162#.tensorflow.VariableSynchron"
  "ization\0224\n\013aggregation\030\005 \001(\0162\037.tensorflo"
  "w.VariableAggregation\022\014\n\004name\030\006 \001(\t\"\225\001\n\014"
  "FunctionSpec\0220\n\013fullargspec\030\001 \001(\0132\033.tens"
  "orflow.StructuredValue\022\021\n\tis_method\030\002 \001("
  "\010\0224\n\017input_signature\030\005 \001(\0132\033.tensorflow."
  "StructuredValueJ\004\010\003\020\004J\004\010\004\020\005\"\037\n\rSavedReso"
  "urce\022\016\n\006device\030\001 \001(\tBMZHgithub.com/tenso"
  "rflow/tensorflow/tensorflow/go/core/core"
  "_protos_go_proto\370\001\001b\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto_deps[6] = {
  &::descriptor_table_tensorflow_2fcore_2fframework_2ftensor_5fshape_2eproto,
  &::descriptor_table_tensorflow_2fcore_2fframework_2ftypes_2eproto,
  &::descriptor_table_tensorflow_2fcore_2fframework_2fvariable_2eproto,
  &::descriptor_table_tensorflow_2fcore_2fframework_2fversions_2eproto,
  &::descriptor_table_tensorflow_2fcore_2fprotobuf_2fstruct_2eproto,
  &::descriptor_table_tensorflow_2fcore_2fprotobuf_2ftrackable_5fobject_5fgraph_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto_sccs[12] = {
  &scc_info_FunctionSpec_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto.base,
  &scc_info_SavedAsset_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto.base,
  &scc_info_SavedBareConcreteFunction_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto.base,
  &scc_info_SavedConcreteFunction_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto.base,
  &scc_info_SavedConstant_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto.base,
  &scc_info_SavedFunction_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto.base,
  &scc_info_SavedObject_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto.base,
  &scc_info_SavedObjectGraph_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto.base,
  &scc_info_SavedObjectGraph_ConcreteFunctionsEntry_DoNotUse_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto.base,
  &scc_info_SavedResource_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto.base,
  &scc_info_SavedUserObject_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto.base,
  &scc_info_SavedVariable_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto_once;
static bool descriptor_table_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto = {
  &descriptor_table_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto_initialized, descriptor_table_protodef_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto, "tensorflow/core/protobuf/saved_object_graph.proto", 2227,
  &descriptor_table_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto_once, descriptor_table_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto_sccs, descriptor_table_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto_deps, 12, 6,
  schemas, file_default_instances, TableStruct_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto::offsets,
  file_level_metadata_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto, 12, file_level_enum_descriptors_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto, file_level_service_descriptors_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto), true);
namespace tensorflow {

// ===================================================================

SavedObjectGraph_ConcreteFunctionsEntry_DoNotUse::SavedObjectGraph_ConcreteFunctionsEntry_DoNotUse() {}
SavedObjectGraph_ConcreteFunctionsEntry_DoNotUse::SavedObjectGraph_ConcreteFunctionsEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void SavedObjectGraph_ConcreteFunctionsEntry_DoNotUse::MergeFrom(const SavedObjectGraph_ConcreteFunctionsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata SavedObjectGraph_ConcreteFunctionsEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void SavedObjectGraph_ConcreteFunctionsEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

void SavedObjectGraph::InitAsDefaultInstance() {
}
class SavedObjectGraph::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SavedObjectGraph::kNodesFieldNumber;
const int SavedObjectGraph::kConcreteFunctionsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SavedObjectGraph::SavedObjectGraph()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.SavedObjectGraph)
}
SavedObjectGraph::SavedObjectGraph(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
  _internal_metadata_(arena),
  nodes_(arena),
  concrete_functions_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.SavedObjectGraph)
}
SavedObjectGraph::SavedObjectGraph(const SavedObjectGraph& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      nodes_(from.nodes_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  concrete_functions_.MergeFrom(from.concrete_functions_);
  // @@protoc_insertion_point(copy_constructor:tensorflow.SavedObjectGraph)
}

void SavedObjectGraph::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SavedObjectGraph_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto.base);
}

SavedObjectGraph::~SavedObjectGraph() {
  // @@protoc_insertion_point(destructor:tensorflow.SavedObjectGraph)
  SharedDtor();
}

void SavedObjectGraph::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == nullptr);
}

void SavedObjectGraph::ArenaDtor(void* object) {
  SavedObjectGraph* _this = reinterpret_cast< SavedObjectGraph* >(object);
  (void)_this;
}
void SavedObjectGraph::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SavedObjectGraph::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SavedObjectGraph& SavedObjectGraph::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SavedObjectGraph_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto.base);
  return *internal_default_instance();
}


void SavedObjectGraph::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.SavedObjectGraph)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  nodes_.Clear();
  concrete_functions_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* SavedObjectGraph::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArenaNoVirtual(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .tensorflow.SavedObject nodes = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(add_nodes(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 10);
        } else goto handle_unusual;
        continue;
      // map<string, .tensorflow.SavedConcreteFunction> concrete_functions = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&concrete_functions_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 18);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool SavedObjectGraph::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.SavedObjectGraph)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .tensorflow.SavedObject nodes = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_nodes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, .tensorflow.SavedConcreteFunction> concrete_functions = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          SavedObjectGraph_ConcreteFunctionsEntry_DoNotUse::Parser< ::PROTOBUF_NAMESPACE_ID::internal::MapField<
              SavedObjectGraph_ConcreteFunctionsEntry_DoNotUse,
              std::string, ::tensorflow::SavedConcreteFunction,
              ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
              ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::tensorflow::SavedConcreteFunction > > parser(&concrete_functions_);
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE,
            "tensorflow.SavedObjectGraph.ConcreteFunctionsEntry.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.SavedObjectGraph)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.SavedObjectGraph)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void SavedObjectGraph::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.SavedObjectGraph)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .tensorflow.SavedObject nodes = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->nodes_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->nodes(static_cast<int>(i)),
      output);
  }

  // map<string, .tensorflow.SavedConcreteFunction> concrete_functions = 2;
  if (!this->concrete_functions().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::tensorflow::SavedConcreteFunction >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "tensorflow.SavedObjectGraph.ConcreteFunctionsEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->concrete_functions().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->concrete_functions().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::tensorflow::SavedConcreteFunction >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::tensorflow::SavedConcreteFunction >::const_iterator
          it = this->concrete_functions().begin();
          it != this->concrete_functions().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        SavedObjectGraph_ConcreteFunctionsEntry_DoNotUse::MapEntryWrapper entry(nullptr, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second);
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(2, entry, output);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::tensorflow::SavedConcreteFunction >::const_iterator
          it = this->concrete_functions().begin();
          it != this->concrete_functions().end(); ++it) {
        SavedObjectGraph_ConcreteFunctionsEntry_DoNotUse::MapEntryWrapper entry(nullptr, it->first, it->second);
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(2, entry, output);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.SavedObjectGraph)
}

::PROTOBUF_NAMESPACE_ID::uint8* SavedObjectGraph::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.SavedObjectGraph)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .tensorflow.SavedObject nodes = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->nodes_size()); i < n; i++) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->nodes(static_cast<int>(i)), target);
  }

  // map<string, .tensorflow.SavedConcreteFunction> concrete_functions = 2;
  if (!this->concrete_functions().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::tensorflow::SavedConcreteFunction >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "tensorflow.SavedObjectGraph.ConcreteFunctionsEntry.key");
      }
    };

    if (false &&
        this->concrete_functions().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->concrete_functions().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::tensorflow::SavedConcreteFunction >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::tensorflow::SavedConcreteFunction >::const_iterator
          it = this->concrete_functions().begin();
          it != this->concrete_functions().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        SavedObjectGraph_ConcreteFunctionsEntry_DoNotUse::MapEntryWrapper entry(nullptr, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second);
        target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::InternalWriteMessageNoVirtualToArray(2, entry, target);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::tensorflow::SavedConcreteFunction >::const_iterator
          it = this->concrete_functions().begin();
          it != this->concrete_functions().end(); ++it) {
        SavedObjectGraph_ConcreteFunctionsEntry_DoNotUse::MapEntryWrapper entry(nullptr, it->first, it->second);
        target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::InternalWriteMessageNoVirtualToArray(2, entry, target);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.SavedObjectGraph)
  return target;
}

size_t SavedObjectGraph::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.SavedObjectGraph)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .tensorflow.SavedObject nodes = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->nodes_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->nodes(static_cast<int>(i)));
    }
  }

  // map<string, .tensorflow.SavedConcreteFunction> concrete_functions = 2;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->concrete_functions_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::tensorflow::SavedConcreteFunction >::const_iterator
      it = this->concrete_functions().begin();
      it != this->concrete_functions().end(); ++it) {
    SavedObjectGraph_ConcreteFunctionsEntry_DoNotUse::MapEntryWrapper entry(nullptr, it->first, it->second);
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        MessageSizeNoVirtual(entry);
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SavedObjectGraph::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.SavedObjectGraph)
  GOOGLE_DCHECK_NE(&from, this);
  const SavedObjectGraph* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SavedObjectGraph>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.SavedObjectGraph)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.SavedObjectGraph)
    MergeFrom(*source);
  }
}

void SavedObjectGraph::MergeFrom(const SavedObjectGraph& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.SavedObjectGraph)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  nodes_.MergeFrom(from.nodes_);
  concrete_functions_.MergeFrom(from.concrete_functions_);
}

void SavedObjectGraph::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.SavedObjectGraph)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SavedObjectGraph::CopyFrom(const SavedObjectGraph& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.SavedObjectGraph)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SavedObjectGraph::IsInitialized() const {
  return true;
}

void SavedObjectGraph::Swap(SavedObjectGraph* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    SavedObjectGraph* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == nullptr) {
      delete temp;
    }
  }
}
void SavedObjectGraph::UnsafeArenaSwap(SavedObjectGraph* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void SavedObjectGraph::InternalSwap(SavedObjectGraph* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&nodes_)->InternalSwap(CastToBase(&other->nodes_));
  concrete_functions_.Swap(&other->concrete_functions_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SavedObjectGraph::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SavedObject::InitAsDefaultInstance() {
  ::tensorflow::_SavedObject_default_instance_.user_object_ = const_cast< ::tensorflow::SavedUserObject*>(
      ::tensorflow::SavedUserObject::internal_default_instance());
  ::tensorflow::_SavedObject_default_instance_.asset_ = const_cast< ::tensorflow::SavedAsset*>(
      ::tensorflow::SavedAsset::internal_default_instance());
  ::tensorflow::_SavedObject_default_instance_.function_ = const_cast< ::tensorflow::SavedFunction*>(
      ::tensorflow::SavedFunction::internal_default_instance());
  ::tensorflow::_SavedObject_default_instance_.variable_ = const_cast< ::tensorflow::SavedVariable*>(
      ::tensorflow::SavedVariable::internal_default_instance());
  ::tensorflow::_SavedObject_default_instance_.bare_concrete_function_ = const_cast< ::tensorflow::SavedBareConcreteFunction*>(
      ::tensorflow::SavedBareConcreteFunction::internal_default_instance());
  ::tensorflow::_SavedObject_default_instance_.constant_ = const_cast< ::tensorflow::SavedConstant*>(
      ::tensorflow::SavedConstant::internal_default_instance());
  ::tensorflow::_SavedObject_default_instance_.resource_ = const_cast< ::tensorflow::SavedResource*>(
      ::tensorflow::SavedResource::internal_default_instance());
}
class SavedObject::HasBitSetters {
 public:
  static const ::tensorflow::SavedUserObject& user_object(const SavedObject* msg);
  static const ::tensorflow::SavedAsset& asset(const SavedObject* msg);
  static const ::tensorflow::SavedFunction& function(const SavedObject* msg);
  static const ::tensorflow::SavedVariable& variable(const SavedObject* msg);
  static const ::tensorflow::SavedBareConcreteFunction& bare_concrete_function(const SavedObject* msg);
  static const ::tensorflow::SavedConstant& constant(const SavedObject* msg);
  static const ::tensorflow::SavedResource& resource(const SavedObject* msg);
};

const ::tensorflow::SavedUserObject&
SavedObject::HasBitSetters::user_object(const SavedObject* msg) {
  return *msg->kind_.user_object_;
}
const ::tensorflow::SavedAsset&
SavedObject::HasBitSetters::asset(const SavedObject* msg) {
  return *msg->kind_.asset_;
}
const ::tensorflow::SavedFunction&
SavedObject::HasBitSetters::function(const SavedObject* msg) {
  return *msg->kind_.function_;
}
const ::tensorflow::SavedVariable&
SavedObject::HasBitSetters::variable(const SavedObject* msg) {
  return *msg->kind_.variable_;
}
const ::tensorflow::SavedBareConcreteFunction&
SavedObject::HasBitSetters::bare_concrete_function(const SavedObject* msg) {
  return *msg->kind_.bare_concrete_function_;
}
const ::tensorflow::SavedConstant&
SavedObject::HasBitSetters::constant(const SavedObject* msg) {
  return *msg->kind_.constant_;
}
const ::tensorflow::SavedResource&
SavedObject::HasBitSetters::resource(const SavedObject* msg) {
  return *msg->kind_.resource_;
}
void SavedObject::clear_children() {
  children_.Clear();
}
void SavedObject::clear_slot_variables() {
  slot_variables_.Clear();
}
void SavedObject::set_allocated_user_object(::tensorflow::SavedUserObject* user_object) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (user_object) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(user_object);
    if (message_arena != submessage_arena) {
      user_object = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, user_object, submessage_arena);
    }
    set_has_user_object();
    kind_.user_object_ = user_object;
  }
  // @@protoc_insertion_point(field_set_allocated:tensorflow.SavedObject.user_object)
}
void SavedObject::set_allocated_asset(::tensorflow::SavedAsset* asset) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (asset) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(asset);
    if (message_arena != submessage_arena) {
      asset = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, asset, submessage_arena);
    }
    set_has_asset();
    kind_.asset_ = asset;
  }
  // @@protoc_insertion_point(field_set_allocated:tensorflow.SavedObject.asset)
}
void SavedObject::set_allocated_function(::tensorflow::SavedFunction* function) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (function) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(function);
    if (message_arena != submessage_arena) {
      function = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, function, submessage_arena);
    }
    set_has_function();
    kind_.function_ = function;
  }
  // @@protoc_insertion_point(field_set_allocated:tensorflow.SavedObject.function)
}
void SavedObject::set_allocated_variable(::tensorflow::SavedVariable* variable) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (variable) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(variable);
    if (message_arena != submessage_arena) {
      variable = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, variable, submessage_arena);
    }
    set_has_variable();
    kind_.variable_ = variable;
  }
  // @@protoc_insertion_point(field_set_allocated:tensorflow.SavedObject.variable)
}
void SavedObject::set_allocated_bare_concrete_function(::tensorflow::SavedBareConcreteFunction* bare_concrete_function) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (bare_concrete_function) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(bare_concrete_function);
    if (message_arena != submessage_arena) {
      bare_concrete_function = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, bare_concrete_function, submessage_arena);
    }
    set_has_bare_concrete_function();
    kind_.bare_concrete_function_ = bare_concrete_function;
  }
  // @@protoc_insertion_point(field_set_allocated:tensorflow.SavedObject.bare_concrete_function)
}
void SavedObject::set_allocated_constant(::tensorflow::SavedConstant* constant) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (constant) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(constant);
    if (message_arena != submessage_arena) {
      constant = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, constant, submessage_arena);
    }
    set_has_constant();
    kind_.constant_ = constant;
  }
  // @@protoc_insertion_point(field_set_allocated:tensorflow.SavedObject.constant)
}
void SavedObject::set_allocated_resource(::tensorflow::SavedResource* resource) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (resource) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(resource);
    if (message_arena != submessage_arena) {
      resource = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, resource, submessage_arena);
    }
    set_has_resource();
    kind_.resource_ = resource;
  }
  // @@protoc_insertion_point(field_set_allocated:tensorflow.SavedObject.resource)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SavedObject::kChildrenFieldNumber;
const int SavedObject::kSlotVariablesFieldNumber;
const int SavedObject::kUserObjectFieldNumber;
const int SavedObject::kAssetFieldNumber;
const int SavedObject::kFunctionFieldNumber;
const int SavedObject::kVariableFieldNumber;
const int SavedObject::kBareConcreteFunctionFieldNumber;
const int SavedObject::kConstantFieldNumber;
const int SavedObject::kResourceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SavedObject::SavedObject()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.SavedObject)
}
SavedObject::SavedObject(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
  _internal_metadata_(arena),
  children_(arena),
  slot_variables_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.SavedObject)
}
SavedObject::SavedObject(const SavedObject& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      children_(from.children_),
      slot_variables_(from.slot_variables_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_kind();
  switch (from.kind_case()) {
    case kUserObject: {
      mutable_user_object()->::tensorflow::SavedUserObject::MergeFrom(from.user_object());
      break;
    }
    case kAsset: {
      mutable_asset()->::tensorflow::SavedAsset::MergeFrom(from.asset());
      break;
    }
    case kFunction: {
      mutable_function()->::tensorflow::SavedFunction::MergeFrom(from.function());
      break;
    }
    case kVariable: {
      mutable_variable()->::tensorflow::SavedVariable::MergeFrom(from.variable());
      break;
    }
    case kBareConcreteFunction: {
      mutable_bare_concrete_function()->::tensorflow::SavedBareConcreteFunction::MergeFrom(from.bare_concrete_function());
      break;
    }
    case kConstant: {
      mutable_constant()->::tensorflow::SavedConstant::MergeFrom(from.constant());
      break;
    }
    case kResource: {
      mutable_resource()->::tensorflow::SavedResource::MergeFrom(from.resource());
      break;
    }
    case KIND_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:tensorflow.SavedObject)
}

void SavedObject::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SavedObject_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto.base);
  clear_has_kind();
}

SavedObject::~SavedObject() {
  // @@protoc_insertion_point(destructor:tensorflow.SavedObject)
  SharedDtor();
}

void SavedObject::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == nullptr);
  if (has_kind()) {
    clear_kind();
  }
}

void SavedObject::ArenaDtor(void* object) {
  SavedObject* _this = reinterpret_cast< SavedObject* >(object);
  (void)_this;
}
void SavedObject::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SavedObject::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SavedObject& SavedObject::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SavedObject_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto.base);
  return *internal_default_instance();
}


void SavedObject::clear_kind() {
// @@protoc_insertion_point(one_of_clear_start:tensorflow.SavedObject)
  switch (kind_case()) {
    case kUserObject: {
      if (GetArenaNoVirtual() == nullptr) {
        delete kind_.user_object_;
      }
      break;
    }
    case kAsset: {
      if (GetArenaNoVirtual() == nullptr) {
        delete kind_.asset_;
      }
      break;
    }
    case kFunction: {
      if (GetArenaNoVirtual() == nullptr) {
        delete kind_.function_;
      }
      break;
    }
    case kVariable: {
      if (GetArenaNoVirtual() == nullptr) {
        delete kind_.variable_;
      }
      break;
    }
    case kBareConcreteFunction: {
      if (GetArenaNoVirtual() == nullptr) {
        delete kind_.bare_concrete_function_;
      }
      break;
    }
    case kConstant: {
      if (GetArenaNoVirtual() == nullptr) {
        delete kind_.constant_;
      }
      break;
    }
    case kResource: {
      if (GetArenaNoVirtual() == nullptr) {
        delete kind_.resource_;
      }
      break;
    }
    case KIND_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = KIND_NOT_SET;
}


void SavedObject::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.SavedObject)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  children_.Clear();
  slot_variables_.Clear();
  clear_kind();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* SavedObject::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArenaNoVirtual(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .tensorflow.TrackableObjectGraph.TrackableObject.ObjectReference children = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(add_children(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 10);
        } else goto handle_unusual;
        continue;
      // repeated .tensorflow.TrackableObjectGraph.TrackableObject.SlotVariableReference slot_variables = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(add_slot_variables(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 26);
        } else goto handle_unusual;
        continue;
      // .tensorflow.SavedUserObject user_object = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(mutable_user_object(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .tensorflow.SavedAsset asset = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(mutable_asset(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .tensorflow.SavedFunction function = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr = ctx->ParseMessage(mutable_function(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .tensorflow.SavedVariable variable = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          ptr = ctx->ParseMessage(mutable_variable(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .tensorflow.SavedBareConcreteFunction bare_concrete_function = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          ptr = ctx->ParseMessage(mutable_bare_concrete_function(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .tensorflow.SavedConstant constant = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          ptr = ctx->ParseMessage(mutable_constant(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .tensorflow.SavedResource resource = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 82)) {
          ptr = ctx->ParseMessage(mutable_resource(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool SavedObject::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.SavedObject)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .tensorflow.TrackableObjectGraph.TrackableObject.ObjectReference children = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_children()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .tensorflow.TrackableObjectGraph.TrackableObject.SlotVariableReference slot_variables = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (26 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_slot_variables()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .tensorflow.SavedUserObject user_object = 4;
      case 4: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (34 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_user_object()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .tensorflow.SavedAsset asset = 5;
      case 5: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (42 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_asset()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .tensorflow.SavedFunction function = 6;
      case 6: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (50 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_function()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .tensorflow.SavedVariable variable = 7;
      case 7: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (58 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_variable()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .tensorflow.SavedBareConcreteFunction bare_concrete_function = 8;
      case 8: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (66 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_bare_concrete_function()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .tensorflow.SavedConstant constant = 9;
      case 9: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (74 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_constant()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .tensorflow.SavedResource resource = 10;
      case 10: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (82 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_resource()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.SavedObject)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.SavedObject)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void SavedObject::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.SavedObject)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .tensorflow.TrackableObjectGraph.TrackableObject.ObjectReference children = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->children_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->children(static_cast<int>(i)),
      output);
  }

  // repeated .tensorflow.TrackableObjectGraph.TrackableObject.SlotVariableReference slot_variables = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->slot_variables_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->slot_variables(static_cast<int>(i)),
      output);
  }

  // .tensorflow.SavedUserObject user_object = 4;
  if (has_user_object()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, HasBitSetters::user_object(this), output);
  }

  // .tensorflow.SavedAsset asset = 5;
  if (has_asset()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, HasBitSetters::asset(this), output);
  }

  // .tensorflow.SavedFunction function = 6;
  if (has_function()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, HasBitSetters::function(this), output);
  }

  // .tensorflow.SavedVariable variable = 7;
  if (has_variable()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, HasBitSetters::variable(this), output);
  }

  // .tensorflow.SavedBareConcreteFunction bare_concrete_function = 8;
  if (has_bare_concrete_function()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, HasBitSetters::bare_concrete_function(this), output);
  }

  // .tensorflow.SavedConstant constant = 9;
  if (has_constant()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, HasBitSetters::constant(this), output);
  }

  // .tensorflow.SavedResource resource = 10;
  if (has_resource()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, HasBitSetters::resource(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.SavedObject)
}

::PROTOBUF_NAMESPACE_ID::uint8* SavedObject::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.SavedObject)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .tensorflow.TrackableObjectGraph.TrackableObject.ObjectReference children = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->children_size()); i < n; i++) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->children(static_cast<int>(i)), target);
  }

  // repeated .tensorflow.TrackableObjectGraph.TrackableObject.SlotVariableReference slot_variables = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->slot_variables_size()); i < n; i++) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->slot_variables(static_cast<int>(i)), target);
  }

  // .tensorflow.SavedUserObject user_object = 4;
  if (has_user_object()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, HasBitSetters::user_object(this), target);
  }

  // .tensorflow.SavedAsset asset = 5;
  if (has_asset()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, HasBitSetters::asset(this), target);
  }

  // .tensorflow.SavedFunction function = 6;
  if (has_function()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, HasBitSetters::function(this), target);
  }

  // .tensorflow.SavedVariable variable = 7;
  if (has_variable()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, HasBitSetters::variable(this), target);
  }

  // .tensorflow.SavedBareConcreteFunction bare_concrete_function = 8;
  if (has_bare_concrete_function()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, HasBitSetters::bare_concrete_function(this), target);
  }

  // .tensorflow.SavedConstant constant = 9;
  if (has_constant()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, HasBitSetters::constant(this), target);
  }

  // .tensorflow.SavedResource resource = 10;
  if (has_resource()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, HasBitSetters::resource(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.SavedObject)
  return target;
}

size_t SavedObject::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.SavedObject)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .tensorflow.TrackableObjectGraph.TrackableObject.ObjectReference children = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->children_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->children(static_cast<int>(i)));
    }
  }

  // repeated .tensorflow.TrackableObjectGraph.TrackableObject.SlotVariableReference slot_variables = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->slot_variables_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->slot_variables(static_cast<int>(i)));
    }
  }

  switch (kind_case()) {
    // .tensorflow.SavedUserObject user_object = 4;
    case kUserObject: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *kind_.user_object_);
      break;
    }
    // .tensorflow.SavedAsset asset = 5;
    case kAsset: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *kind_.asset_);
      break;
    }
    // .tensorflow.SavedFunction function = 6;
    case kFunction: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *kind_.function_);
      break;
    }
    // .tensorflow.SavedVariable variable = 7;
    case kVariable: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *kind_.variable_);
      break;
    }
    // .tensorflow.SavedBareConcreteFunction bare_concrete_function = 8;
    case kBareConcreteFunction: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *kind_.bare_concrete_function_);
      break;
    }
    // .tensorflow.SavedConstant constant = 9;
    case kConstant: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *kind_.constant_);
      break;
    }
    // .tensorflow.SavedResource resource = 10;
    case kResource: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *kind_.resource_);
      break;
    }
    case KIND_NOT_SET: {
      break;
    }
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SavedObject::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.SavedObject)
  GOOGLE_DCHECK_NE(&from, this);
  const SavedObject* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SavedObject>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.SavedObject)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.SavedObject)
    MergeFrom(*source);
  }
}

void SavedObject::MergeFrom(const SavedObject& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.SavedObject)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  children_.MergeFrom(from.children_);
  slot_variables_.MergeFrom(from.slot_variables_);
  switch (from.kind_case()) {
    case kUserObject: {
      mutable_user_object()->::tensorflow::SavedUserObject::MergeFrom(from.user_object());
      break;
    }
    case kAsset: {
      mutable_asset()->::tensorflow::SavedAsset::MergeFrom(from.asset());
      break;
    }
    case kFunction: {
      mutable_function()->::tensorflow::SavedFunction::MergeFrom(from.function());
      break;
    }
    case kVariable: {
      mutable_variable()->::tensorflow::SavedVariable::MergeFrom(from.variable());
      break;
    }
    case kBareConcreteFunction: {
      mutable_bare_concrete_function()->::tensorflow::SavedBareConcreteFunction::MergeFrom(from.bare_concrete_function());
      break;
    }
    case kConstant: {
      mutable_constant()->::tensorflow::SavedConstant::MergeFrom(from.constant());
      break;
    }
    case kResource: {
      mutable_resource()->::tensorflow::SavedResource::MergeFrom(from.resource());
      break;
    }
    case KIND_NOT_SET: {
      break;
    }
  }
}

void SavedObject::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.SavedObject)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SavedObject::CopyFrom(const SavedObject& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.SavedObject)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SavedObject::IsInitialized() const {
  return true;
}

void SavedObject::Swap(SavedObject* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    SavedObject* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == nullptr) {
      delete temp;
    }
  }
}
void SavedObject::UnsafeArenaSwap(SavedObject* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void SavedObject::InternalSwap(SavedObject* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&children_)->InternalSwap(CastToBase(&other->children_));
  CastToBase(&slot_variables_)->InternalSwap(CastToBase(&other->slot_variables_));
  swap(kind_, other->kind_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata SavedObject::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SavedUserObject::InitAsDefaultInstance() {
  ::tensorflow::_SavedUserObject_default_instance_._instance.get_mutable()->version_ = const_cast< ::tensorflow::VersionDef*>(
      ::tensorflow::VersionDef::internal_default_instance());
}
class SavedUserObject::HasBitSetters {
 public:
  static const ::tensorflow::VersionDef& version(const SavedUserObject* msg);
};

const ::tensorflow::VersionDef&
SavedUserObject::HasBitSetters::version(const SavedUserObject* msg) {
  return *msg->version_;
}
void SavedUserObject::unsafe_arena_set_allocated_version(
    ::tensorflow::VersionDef* version) {
  if (GetArenaNoVirtual() == nullptr) {
    delete version_;
  }
  version_ = version;
  if (version) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.SavedUserObject.version)
}
void SavedUserObject::clear_version() {
  if (GetArenaNoVirtual() == nullptr && version_ != nullptr) {
    delete version_;
  }
  version_ = nullptr;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SavedUserObject::kIdentifierFieldNumber;
const int SavedUserObject::kVersionFieldNumber;
const int SavedUserObject::kMetadataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SavedUserObject::SavedUserObject()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.SavedUserObject)
}
SavedUserObject::SavedUserObject(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
  _internal_metadata_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.SavedUserObject)
}
SavedUserObject::SavedUserObject(const SavedUserObject& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  identifier_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.identifier().size() > 0) {
    identifier_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.identifier(),
      GetArenaNoVirtual());
  }
  metadata_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.metadata().size() > 0) {
    metadata_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.metadata(),
      GetArenaNoVirtual());
  }
  if (from.has_version()) {
    version_ = new ::tensorflow::VersionDef(*from.version_);
  } else {
    version_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:tensorflow.SavedUserObject)
}

void SavedUserObject::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SavedUserObject_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto.base);
  identifier_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  metadata_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  version_ = nullptr;
}

SavedUserObject::~SavedUserObject() {
  // @@protoc_insertion_point(destructor:tensorflow.SavedUserObject)
  SharedDtor();
}

void SavedUserObject::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == nullptr);
  identifier_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  metadata_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete version_;
}

void SavedUserObject::ArenaDtor(void* object) {
  SavedUserObject* _this = reinterpret_cast< SavedUserObject* >(object);
  (void)_this;
}
void SavedUserObject::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SavedUserObject::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SavedUserObject& SavedUserObject::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SavedUserObject_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto.base);
  return *internal_default_instance();
}


void SavedUserObject::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.SavedUserObject)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  identifier_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  metadata_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  if (GetArenaNoVirtual() == nullptr && version_ != nullptr) {
    delete version_;
  }
  version_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* SavedUserObject::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArenaNoVirtual(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string identifier = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(mutable_identifier(), ptr, ctx, "tensorflow.SavedUserObject.identifier");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .tensorflow.VersionDef version = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(mutable_version(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string metadata = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(mutable_metadata(), ptr, ctx, "tensorflow.SavedUserObject.metadata");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool SavedUserObject::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.SavedUserObject)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string identifier = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_identifier()));
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
            this->identifier().data(), static_cast<int>(this->identifier().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE,
            "tensorflow.SavedUserObject.identifier"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .tensorflow.VersionDef version = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_version()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string metadata = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (26 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_metadata()));
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
            this->metadata().data(), static_cast<int>(this->metadata().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE,
            "tensorflow.SavedUserObject.metadata"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.SavedUserObject)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.SavedUserObject)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void SavedUserObject::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.SavedUserObject)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string identifier = 1;
  if (this->identifier().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->identifier().data(), static_cast<int>(this->identifier().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "tensorflow.SavedUserObject.identifier");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->identifier(), output);
  }

  // .tensorflow.VersionDef version = 2;
  if (this->has_version()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::version(this), output);
  }

  // string metadata = 3;
  if (this->metadata().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->metadata().data(), static_cast<int>(this->metadata().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "tensorflow.SavedUserObject.metadata");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->metadata(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.SavedUserObject)
}

::PROTOBUF_NAMESPACE_ID::uint8* SavedUserObject::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.SavedUserObject)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string identifier = 1;
  if (this->identifier().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->identifier().data(), static_cast<int>(this->identifier().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "tensorflow.SavedUserObject.identifier");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        1, this->identifier(), target);
  }

  // .tensorflow.VersionDef version = 2;
  if (this->has_version()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::version(this), target);
  }

  // string metadata = 3;
  if (this->metadata().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->metadata().data(), static_cast<int>(this->metadata().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "tensorflow.SavedUserObject.metadata");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        3, this->metadata(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.SavedUserObject)
  return target;
}

size_t SavedUserObject::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.SavedUserObject)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string identifier = 1;
  if (this->identifier().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->identifier());
  }

  // string metadata = 3;
  if (this->metadata().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->metadata());
  }

  // .tensorflow.VersionDef version = 2;
  if (this->has_version()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *version_);
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SavedUserObject::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.SavedUserObject)
  GOOGLE_DCHECK_NE(&from, this);
  const SavedUserObject* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SavedUserObject>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.SavedUserObject)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.SavedUserObject)
    MergeFrom(*source);
  }
}

void SavedUserObject::MergeFrom(const SavedUserObject& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.SavedUserObject)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.identifier().size() > 0) {
    set_identifier(from.identifier());
  }
  if (from.metadata().size() > 0) {
    set_metadata(from.metadata());
  }
  if (from.has_version()) {
    mutable_version()->::tensorflow::VersionDef::MergeFrom(from.version());
  }
}

void SavedUserObject::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.SavedUserObject)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SavedUserObject::CopyFrom(const SavedUserObject& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.SavedUserObject)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SavedUserObject::IsInitialized() const {
  return true;
}

void SavedUserObject::Swap(SavedUserObject* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    SavedUserObject* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == nullptr) {
      delete temp;
    }
  }
}
void SavedUserObject::UnsafeArenaSwap(SavedUserObject* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void SavedUserObject::InternalSwap(SavedUserObject* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  identifier_.Swap(&other->identifier_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  metadata_.Swap(&other->metadata_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(version_, other->version_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SavedUserObject::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SavedAsset::InitAsDefaultInstance() {
}
class SavedAsset::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SavedAsset::kAssetFileDefIndexFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SavedAsset::SavedAsset()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.SavedAsset)
}
SavedAsset::SavedAsset(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
  _internal_metadata_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.SavedAsset)
}
SavedAsset::SavedAsset(const SavedAsset& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  asset_file_def_index_ = from.asset_file_def_index_;
  // @@protoc_insertion_point(copy_constructor:tensorflow.SavedAsset)
}

void SavedAsset::SharedCtor() {
  asset_file_def_index_ = 0;
}

SavedAsset::~SavedAsset() {
  // @@protoc_insertion_point(destructor:tensorflow.SavedAsset)
  SharedDtor();
}

void SavedAsset::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == nullptr);
}

void SavedAsset::ArenaDtor(void* object) {
  SavedAsset* _this = reinterpret_cast< SavedAsset* >(object);
  (void)_this;
}
void SavedAsset::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SavedAsset::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SavedAsset& SavedAsset::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SavedAsset_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto.base);
  return *internal_default_instance();
}


void SavedAsset::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.SavedAsset)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  asset_file_def_index_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* SavedAsset::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArenaNoVirtual(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 asset_file_def_index = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          asset_file_def_index_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool SavedAsset::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.SavedAsset)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 asset_file_def_index = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (8 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &asset_file_def_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.SavedAsset)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.SavedAsset)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void SavedAsset::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.SavedAsset)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 asset_file_def_index = 1;
  if (this->asset_file_def_index() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(1, this->asset_file_def_index(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.SavedAsset)
}

::PROTOBUF_NAMESPACE_ID::uint8* SavedAsset::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.SavedAsset)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 asset_file_def_index = 1;
  if (this->asset_file_def_index() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->asset_file_def_index(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.SavedAsset)
  return target;
}

size_t SavedAsset::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.SavedAsset)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 asset_file_def_index = 1;
  if (this->asset_file_def_index() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->asset_file_def_index());
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SavedAsset::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.SavedAsset)
  GOOGLE_DCHECK_NE(&from, this);
  const SavedAsset* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SavedAsset>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.SavedAsset)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.SavedAsset)
    MergeFrom(*source);
  }
}

void SavedAsset::MergeFrom(const SavedAsset& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.SavedAsset)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.asset_file_def_index() != 0) {
    set_asset_file_def_index(from.asset_file_def_index());
  }
}

void SavedAsset::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.SavedAsset)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SavedAsset::CopyFrom(const SavedAsset& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.SavedAsset)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SavedAsset::IsInitialized() const {
  return true;
}

void SavedAsset::Swap(SavedAsset* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    SavedAsset* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == nullptr) {
      delete temp;
    }
  }
}
void SavedAsset::UnsafeArenaSwap(SavedAsset* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void SavedAsset::InternalSwap(SavedAsset* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(asset_file_def_index_, other->asset_file_def_index_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SavedAsset::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SavedFunction::InitAsDefaultInstance() {
  ::tensorflow::_SavedFunction_default_instance_._instance.get_mutable()->function_spec_ = const_cast< ::tensorflow::FunctionSpec*>(
      ::tensorflow::FunctionSpec::internal_default_instance());
}
class SavedFunction::HasBitSetters {
 public:
  static const ::tensorflow::FunctionSpec& function_spec(const SavedFunction* msg);
};

const ::tensorflow::FunctionSpec&
SavedFunction::HasBitSetters::function_spec(const SavedFunction* msg) {
  return *msg->function_spec_;
}
void SavedFunction::unsafe_arena_set_allocated_function_spec(
    ::tensorflow::FunctionSpec* function_spec) {
  if (GetArenaNoVirtual() == nullptr) {
    delete function_spec_;
  }
  function_spec_ = function_spec;
  if (function_spec) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.SavedFunction.function_spec)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SavedFunction::kConcreteFunctionsFieldNumber;
const int SavedFunction::kFunctionSpecFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SavedFunction::SavedFunction()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.SavedFunction)
}
SavedFunction::SavedFunction(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
  _internal_metadata_(arena),
  concrete_functions_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.SavedFunction)
}
SavedFunction::SavedFunction(const SavedFunction& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      concrete_functions_(from.concrete_functions_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_function_spec()) {
    function_spec_ = new ::tensorflow::FunctionSpec(*from.function_spec_);
  } else {
    function_spec_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:tensorflow.SavedFunction)
}

void SavedFunction::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SavedFunction_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto.base);
  function_spec_ = nullptr;
}

SavedFunction::~SavedFunction() {
  // @@protoc_insertion_point(destructor:tensorflow.SavedFunction)
  SharedDtor();
}

void SavedFunction::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == nullptr);
  if (this != internal_default_instance()) delete function_spec_;
}

void SavedFunction::ArenaDtor(void* object) {
  SavedFunction* _this = reinterpret_cast< SavedFunction* >(object);
  (void)_this;
}
void SavedFunction::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SavedFunction::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SavedFunction& SavedFunction::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SavedFunction_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto.base);
  return *internal_default_instance();
}


void SavedFunction::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.SavedFunction)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  concrete_functions_.Clear();
  if (GetArenaNoVirtual() == nullptr && function_spec_ != nullptr) {
    delete function_spec_;
  }
  function_spec_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* SavedFunction::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArenaNoVirtual(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated string concrete_functions = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(add_concrete_functions(), ptr, ctx, "tensorflow.SavedFunction.concrete_functions");
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 10);
        } else goto handle_unusual;
        continue;
      // .tensorflow.FunctionSpec function_spec = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(mutable_function_spec(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool SavedFunction::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.SavedFunction)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string concrete_functions = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->add_concrete_functions()));
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
            this->concrete_functions(this->concrete_functions_size() - 1).data(),
            static_cast<int>(this->concrete_functions(this->concrete_functions_size() - 1).length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE,
            "tensorflow.SavedFunction.concrete_functions"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .tensorflow.FunctionSpec function_spec = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_function_spec()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.SavedFunction)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.SavedFunction)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void SavedFunction::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.SavedFunction)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string concrete_functions = 1;
  for (int i = 0, n = this->concrete_functions_size(); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->concrete_functions(i).data(), static_cast<int>(this->concrete_functions(i).length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "tensorflow.SavedFunction.concrete_functions");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteString(
      1, this->concrete_functions(i), output);
  }

  // .tensorflow.FunctionSpec function_spec = 2;
  if (this->has_function_spec()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::function_spec(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.SavedFunction)
}

::PROTOBUF_NAMESPACE_ID::uint8* SavedFunction::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.SavedFunction)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string concrete_functions = 1;
  for (int i = 0, n = this->concrete_functions_size(); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->concrete_functions(i).data(), static_cast<int>(this->concrete_functions(i).length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "tensorflow.SavedFunction.concrete_functions");
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      WriteStringToArray(1, this->concrete_functions(i), target);
  }

  // .tensorflow.FunctionSpec function_spec = 2;
  if (this->has_function_spec()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::function_spec(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.SavedFunction)
  return target;
}

size_t SavedFunction::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.SavedFunction)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string concrete_functions = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->concrete_functions_size());
  for (int i = 0, n = this->concrete_functions_size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      this->concrete_functions(i));
  }

  // .tensorflow.FunctionSpec function_spec = 2;
  if (this->has_function_spec()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *function_spec_);
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SavedFunction::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.SavedFunction)
  GOOGLE_DCHECK_NE(&from, this);
  const SavedFunction* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SavedFunction>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.SavedFunction)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.SavedFunction)
    MergeFrom(*source);
  }
}

void SavedFunction::MergeFrom(const SavedFunction& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.SavedFunction)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  concrete_functions_.MergeFrom(from.concrete_functions_);
  if (from.has_function_spec()) {
    mutable_function_spec()->::tensorflow::FunctionSpec::MergeFrom(from.function_spec());
  }
}

void SavedFunction::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.SavedFunction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SavedFunction::CopyFrom(const SavedFunction& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.SavedFunction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SavedFunction::IsInitialized() const {
  return true;
}

void SavedFunction::Swap(SavedFunction* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    SavedFunction* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == nullptr) {
      delete temp;
    }
  }
}
void SavedFunction::UnsafeArenaSwap(SavedFunction* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void SavedFunction::InternalSwap(SavedFunction* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  concrete_functions_.InternalSwap(CastToBase(&other->concrete_functions_));
  swap(function_spec_, other->function_spec_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SavedFunction::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SavedConcreteFunction::InitAsDefaultInstance() {
  ::tensorflow::_SavedConcreteFunction_default_instance_._instance.get_mutable()->canonicalized_input_signature_ = const_cast< ::tensorflow::StructuredValue*>(
      ::tensorflow::StructuredValue::internal_default_instance());
  ::tensorflow::_SavedConcreteFunction_default_instance_._instance.get_mutable()->output_signature_ = const_cast< ::tensorflow::StructuredValue*>(
      ::tensorflow::StructuredValue::internal_default_instance());
}
class SavedConcreteFunction::HasBitSetters {
 public:
  static const ::tensorflow::StructuredValue& canonicalized_input_signature(const SavedConcreteFunction* msg);
  static const ::tensorflow::StructuredValue& output_signature(const SavedConcreteFunction* msg);
};

const ::tensorflow::StructuredValue&
SavedConcreteFunction::HasBitSetters::canonicalized_input_signature(const SavedConcreteFunction* msg) {
  return *msg->canonicalized_input_signature_;
}
const ::tensorflow::StructuredValue&
SavedConcreteFunction::HasBitSetters::output_signature(const SavedConcreteFunction* msg) {
  return *msg->output_signature_;
}
void SavedConcreteFunction::unsafe_arena_set_allocated_canonicalized_input_signature(
    ::tensorflow::StructuredValue* canonicalized_input_signature) {
  if (GetArenaNoVirtual() == nullptr) {
    delete canonicalized_input_signature_;
  }
  canonicalized_input_signature_ = canonicalized_input_signature;
  if (canonicalized_input_signature) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.SavedConcreteFunction.canonicalized_input_signature)
}
void SavedConcreteFunction::clear_canonicalized_input_signature() {
  if (GetArenaNoVirtual() == nullptr && canonicalized_input_signature_ != nullptr) {
    delete canonicalized_input_signature_;
  }
  canonicalized_input_signature_ = nullptr;
}
void SavedConcreteFunction::unsafe_arena_set_allocated_output_signature(
    ::tensorflow::StructuredValue* output_signature) {
  if (GetArenaNoVirtual() == nullptr) {
    delete output_signature_;
  }
  output_signature_ = output_signature;
  if (output_signature) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.SavedConcreteFunction.output_signature)
}
void SavedConcreteFunction::clear_output_signature() {
  if (GetArenaNoVirtual() == nullptr && output_signature_ != nullptr) {
    delete output_signature_;
  }
  output_signature_ = nullptr;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SavedConcreteFunction::kBoundInputsFieldNumber;
const int SavedConcreteFunction::kCanonicalizedInputSignatureFieldNumber;
const int SavedConcreteFunction::kOutputSignatureFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SavedConcreteFunction::SavedConcreteFunction()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.SavedConcreteFunction)
}
SavedConcreteFunction::SavedConcreteFunction(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
  _internal_metadata_(arena),
  bound_inputs_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.SavedConcreteFunction)
}
SavedConcreteFunction::SavedConcreteFunction(const SavedConcreteFunction& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      bound_inputs_(from.bound_inputs_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_canonicalized_input_signature()) {
    canonicalized_input_signature_ = new ::tensorflow::StructuredValue(*from.canonicalized_input_signature_);
  } else {
    canonicalized_input_signature_ = nullptr;
  }
  if (from.has_output_signature()) {
    output_signature_ = new ::tensorflow::StructuredValue(*from.output_signature_);
  } else {
    output_signature_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:tensorflow.SavedConcreteFunction)
}

void SavedConcreteFunction::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SavedConcreteFunction_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto.base);
  ::memset(&canonicalized_input_signature_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&output_signature_) -
      reinterpret_cast<char*>(&canonicalized_input_signature_)) + sizeof(output_signature_));
}

SavedConcreteFunction::~SavedConcreteFunction() {
  // @@protoc_insertion_point(destructor:tensorflow.SavedConcreteFunction)
  SharedDtor();
}

void SavedConcreteFunction::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == nullptr);
  if (this != internal_default_instance()) delete canonicalized_input_signature_;
  if (this != internal_default_instance()) delete output_signature_;
}

void SavedConcreteFunction::ArenaDtor(void* object) {
  SavedConcreteFunction* _this = reinterpret_cast< SavedConcreteFunction* >(object);
  (void)_this;
}
void SavedConcreteFunction::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SavedConcreteFunction::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SavedConcreteFunction& SavedConcreteFunction::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SavedConcreteFunction_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto.base);
  return *internal_default_instance();
}


void SavedConcreteFunction::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.SavedConcreteFunction)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  bound_inputs_.Clear();
  if (GetArenaNoVirtual() == nullptr && canonicalized_input_signature_ != nullptr) {
    delete canonicalized_input_signature_;
  }
  canonicalized_input_signature_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && output_signature_ != nullptr) {
    delete output_signature_;
  }
  output_signature_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* SavedConcreteFunction::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArenaNoVirtual(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated int32 bound_inputs = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt32Parser(mutable_bound_inputs(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16) {
          add_bound_inputs(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .tensorflow.StructuredValue canonicalized_input_signature = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(mutable_canonicalized_input_signature(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .tensorflow.StructuredValue output_signature = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(mutable_output_signature(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool SavedConcreteFunction::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.SavedConcreteFunction)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 bound_inputs = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPackedPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_bound_inputs())));
        } else if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (16 & 0xFF)) {
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 1, 18u, input, this->mutable_bound_inputs())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .tensorflow.StructuredValue canonicalized_input_signature = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (26 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_canonicalized_input_signature()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .tensorflow.StructuredValue output_signature = 4;
      case 4: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (34 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_output_signature()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.SavedConcreteFunction)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.SavedConcreteFunction)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void SavedConcreteFunction::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.SavedConcreteFunction)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 bound_inputs = 2;
  if (this->bound_inputs_size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteTag(2, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_bound_inputs_cached_byte_size_.load(
        std::memory_order_relaxed));
  }
  for (int i = 0, n = this->bound_inputs_size(); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32NoTag(
      this->bound_inputs(i), output);
  }

  // .tensorflow.StructuredValue canonicalized_input_signature = 3;
  if (this->has_canonicalized_input_signature()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, HasBitSetters::canonicalized_input_signature(this), output);
  }

  // .tensorflow.StructuredValue output_signature = 4;
  if (this->has_output_signature()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, HasBitSetters::output_signature(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.SavedConcreteFunction)
}

::PROTOBUF_NAMESPACE_ID::uint8* SavedConcreteFunction::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.SavedConcreteFunction)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 bound_inputs = 2;
  if (this->bound_inputs_size() > 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteTagToArray(
      2,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream::WriteVarint32ToArray(
        _bound_inputs_cached_byte_size_.load(std::memory_order_relaxed),
         target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->bound_inputs_, target);
  }

  // .tensorflow.StructuredValue canonicalized_input_signature = 3;
  if (this->has_canonicalized_input_signature()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, HasBitSetters::canonicalized_input_signature(this), target);
  }

  // .tensorflow.StructuredValue output_signature = 4;
  if (this->has_output_signature()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, HasBitSetters::output_signature(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.SavedConcreteFunction)
  return target;
}

size_t SavedConcreteFunction::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.SavedConcreteFunction)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int32 bound_inputs = 2;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      Int32Size(this->bound_inputs_);
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _bound_inputs_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // .tensorflow.StructuredValue canonicalized_input_signature = 3;
  if (this->has_canonicalized_input_signature()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *canonicalized_input_signature_);
  }

  // .tensorflow.StructuredValue output_signature = 4;
  if (this->has_output_signature()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *output_signature_);
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SavedConcreteFunction::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.SavedConcreteFunction)
  GOOGLE_DCHECK_NE(&from, this);
  const SavedConcreteFunction* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SavedConcreteFunction>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.SavedConcreteFunction)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.SavedConcreteFunction)
    MergeFrom(*source);
  }
}

void SavedConcreteFunction::MergeFrom(const SavedConcreteFunction& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.SavedConcreteFunction)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  bound_inputs_.MergeFrom(from.bound_inputs_);
  if (from.has_canonicalized_input_signature()) {
    mutable_canonicalized_input_signature()->::tensorflow::StructuredValue::MergeFrom(from.canonicalized_input_signature());
  }
  if (from.has_output_signature()) {
    mutable_output_signature()->::tensorflow::StructuredValue::MergeFrom(from.output_signature());
  }
}

void SavedConcreteFunction::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.SavedConcreteFunction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SavedConcreteFunction::CopyFrom(const SavedConcreteFunction& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.SavedConcreteFunction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SavedConcreteFunction::IsInitialized() const {
  return true;
}

void SavedConcreteFunction::Swap(SavedConcreteFunction* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    SavedConcreteFunction* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == nullptr) {
      delete temp;
    }
  }
}
void SavedConcreteFunction::UnsafeArenaSwap(SavedConcreteFunction* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void SavedConcreteFunction::InternalSwap(SavedConcreteFunction* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  bound_inputs_.InternalSwap(&other->bound_inputs_);
  swap(canonicalized_input_signature_, other->canonicalized_input_signature_);
  swap(output_signature_, other->output_signature_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SavedConcreteFunction::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SavedBareConcreteFunction::InitAsDefaultInstance() {
}
class SavedBareConcreteFunction::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SavedBareConcreteFunction::kConcreteFunctionNameFieldNumber;
const int SavedBareConcreteFunction::kArgumentKeywordsFieldNumber;
const int SavedBareConcreteFunction::kAllowedPositionalArgumentsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SavedBareConcreteFunction::SavedBareConcreteFunction()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.SavedBareConcreteFunction)
}
SavedBareConcreteFunction::SavedBareConcreteFunction(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
  _internal_metadata_(arena),
  argument_keywords_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.SavedBareConcreteFunction)
}
SavedBareConcreteFunction::SavedBareConcreteFunction(const SavedBareConcreteFunction& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      argument_keywords_(from.argument_keywords_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  concrete_function_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.concrete_function_name().size() > 0) {
    concrete_function_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.concrete_function_name(),
      GetArenaNoVirtual());
  }
  allowed_positional_arguments_ = from.allowed_positional_arguments_;
  // @@protoc_insertion_point(copy_constructor:tensorflow.SavedBareConcreteFunction)
}

void SavedBareConcreteFunction::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SavedBareConcreteFunction_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto.base);
  concrete_function_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  allowed_positional_arguments_ = PROTOBUF_LONGLONG(0);
}

SavedBareConcreteFunction::~SavedBareConcreteFunction() {
  // @@protoc_insertion_point(destructor:tensorflow.SavedBareConcreteFunction)
  SharedDtor();
}

void SavedBareConcreteFunction::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == nullptr);
  concrete_function_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void SavedBareConcreteFunction::ArenaDtor(void* object) {
  SavedBareConcreteFunction* _this = reinterpret_cast< SavedBareConcreteFunction* >(object);
  (void)_this;
}
void SavedBareConcreteFunction::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SavedBareConcreteFunction::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SavedBareConcreteFunction& SavedBareConcreteFunction::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SavedBareConcreteFunction_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto.base);
  return *internal_default_instance();
}


void SavedBareConcreteFunction::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.SavedBareConcreteFunction)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  argument_keywords_.Clear();
  concrete_function_name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  allowed_positional_arguments_ = PROTOBUF_LONGLONG(0);
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* SavedBareConcreteFunction::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArenaNoVirtual(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string concrete_function_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(mutable_concrete_function_name(), ptr, ctx, "tensorflow.SavedBareConcreteFunction.concrete_function_name");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated string argument_keywords = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(add_argument_keywords(), ptr, ctx, "tensorflow.SavedBareConcreteFunction.argument_keywords");
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 18);
        } else goto handle_unusual;
        continue;
      // int64 allowed_positional_arguments = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          allowed_positional_arguments_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool SavedBareConcreteFunction::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.SavedBareConcreteFunction)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string concrete_function_name = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_concrete_function_name()));
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
            this->concrete_function_name().data(), static_cast<int>(this->concrete_function_name().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE,
            "tensorflow.SavedBareConcreteFunction.concrete_function_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string argument_keywords = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->add_argument_keywords()));
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
            this->argument_keywords(this->argument_keywords_size() - 1).data(),
            static_cast<int>(this->argument_keywords(this->argument_keywords_size() - 1).length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE,
            "tensorflow.SavedBareConcreteFunction.argument_keywords"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 allowed_positional_arguments = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (24 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int64, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT64>(
                 input, &allowed_positional_arguments_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.SavedBareConcreteFunction)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.SavedBareConcreteFunction)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void SavedBareConcreteFunction::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.SavedBareConcreteFunction)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string concrete_function_name = 1;
  if (this->concrete_function_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->concrete_function_name().data(), static_cast<int>(this->concrete_function_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "tensorflow.SavedBareConcreteFunction.concrete_function_name");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->concrete_function_name(), output);
  }

  // repeated string argument_keywords = 2;
  for (int i = 0, n = this->argument_keywords_size(); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->argument_keywords(i).data(), static_cast<int>(this->argument_keywords(i).length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "tensorflow.SavedBareConcreteFunction.argument_keywords");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteString(
      2, this->argument_keywords(i), output);
  }

  // int64 allowed_positional_arguments = 3;
  if (this->allowed_positional_arguments() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64(3, this->allowed_positional_arguments(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.SavedBareConcreteFunction)
}

::PROTOBUF_NAMESPACE_ID::uint8* SavedBareConcreteFunction::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.SavedBareConcreteFunction)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string concrete_function_name = 1;
  if (this->concrete_function_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->concrete_function_name().data(), static_cast<int>(this->concrete_function_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "tensorflow.SavedBareConcreteFunction.concrete_function_name");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        1, this->concrete_function_name(), target);
  }

  // repeated string argument_keywords = 2;
  for (int i = 0, n = this->argument_keywords_size(); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->argument_keywords(i).data(), static_cast<int>(this->argument_keywords(i).length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "tensorflow.SavedBareConcreteFunction.argument_keywords");
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      WriteStringToArray(2, this->argument_keywords(i), target);
  }

  // int64 allowed_positional_arguments = 3;
  if (this->allowed_positional_arguments() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(3, this->allowed_positional_arguments(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.SavedBareConcreteFunction)
  return target;
}

size_t SavedBareConcreteFunction::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.SavedBareConcreteFunction)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string argument_keywords = 2;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->argument_keywords_size());
  for (int i = 0, n = this->argument_keywords_size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      this->argument_keywords(i));
  }

  // string concrete_function_name = 1;
  if (this->concrete_function_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->concrete_function_name());
  }

  // int64 allowed_positional_arguments = 3;
  if (this->allowed_positional_arguments() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->allowed_positional_arguments());
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SavedBareConcreteFunction::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.SavedBareConcreteFunction)
  GOOGLE_DCHECK_NE(&from, this);
  const SavedBareConcreteFunction* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SavedBareConcreteFunction>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.SavedBareConcreteFunction)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.SavedBareConcreteFunction)
    MergeFrom(*source);
  }
}

void SavedBareConcreteFunction::MergeFrom(const SavedBareConcreteFunction& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.SavedBareConcreteFunction)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  argument_keywords_.MergeFrom(from.argument_keywords_);
  if (from.concrete_function_name().size() > 0) {
    set_concrete_function_name(from.concrete_function_name());
  }
  if (from.allowed_positional_arguments() != 0) {
    set_allowed_positional_arguments(from.allowed_positional_arguments());
  }
}

void SavedBareConcreteFunction::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.SavedBareConcreteFunction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SavedBareConcreteFunction::CopyFrom(const SavedBareConcreteFunction& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.SavedBareConcreteFunction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SavedBareConcreteFunction::IsInitialized() const {
  return true;
}

void SavedBareConcreteFunction::Swap(SavedBareConcreteFunction* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    SavedBareConcreteFunction* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == nullptr) {
      delete temp;
    }
  }
}
void SavedBareConcreteFunction::UnsafeArenaSwap(SavedBareConcreteFunction* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void SavedBareConcreteFunction::InternalSwap(SavedBareConcreteFunction* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  argument_keywords_.InternalSwap(CastToBase(&other->argument_keywords_));
  concrete_function_name_.Swap(&other->concrete_function_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(allowed_positional_arguments_, other->allowed_positional_arguments_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SavedBareConcreteFunction::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SavedConstant::InitAsDefaultInstance() {
}
class SavedConstant::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SavedConstant::kOperationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SavedConstant::SavedConstant()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.SavedConstant)
}
SavedConstant::SavedConstant(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
  _internal_metadata_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.SavedConstant)
}
SavedConstant::SavedConstant(const SavedConstant& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  operation_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.operation().size() > 0) {
    operation_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.operation(),
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(copy_constructor:tensorflow.SavedConstant)
}

void SavedConstant::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SavedConstant_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto.base);
  operation_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

SavedConstant::~SavedConstant() {
  // @@protoc_insertion_point(destructor:tensorflow.SavedConstant)
  SharedDtor();
}

void SavedConstant::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == nullptr);
  operation_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void SavedConstant::ArenaDtor(void* object) {
  SavedConstant* _this = reinterpret_cast< SavedConstant* >(object);
  (void)_this;
}
void SavedConstant::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SavedConstant::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SavedConstant& SavedConstant::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SavedConstant_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto.base);
  return *internal_default_instance();
}


void SavedConstant::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.SavedConstant)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  operation_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* SavedConstant::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArenaNoVirtual(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string operation = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(mutable_operation(), ptr, ctx, "tensorflow.SavedConstant.operation");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool SavedConstant::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.SavedConstant)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string operation = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_operation()));
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
            this->operation().data(), static_cast<int>(this->operation().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE,
            "tensorflow.SavedConstant.operation"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.SavedConstant)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.SavedConstant)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void SavedConstant::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.SavedConstant)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string operation = 1;
  if (this->operation().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->operation().data(), static_cast<int>(this->operation().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "tensorflow.SavedConstant.operation");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->operation(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.SavedConstant)
}

::PROTOBUF_NAMESPACE_ID::uint8* SavedConstant::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.SavedConstant)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string operation = 1;
  if (this->operation().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->operation().data(), static_cast<int>(this->operation().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "tensorflow.SavedConstant.operation");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        1, this->operation(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.SavedConstant)
  return target;
}

size_t SavedConstant::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.SavedConstant)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string operation = 1;
  if (this->operation().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->operation());
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SavedConstant::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.SavedConstant)
  GOOGLE_DCHECK_NE(&from, this);
  const SavedConstant* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SavedConstant>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.SavedConstant)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.SavedConstant)
    MergeFrom(*source);
  }
}

void SavedConstant::MergeFrom(const SavedConstant& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.SavedConstant)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.operation().size() > 0) {
    set_operation(from.operation());
  }
}

void SavedConstant::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.SavedConstant)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SavedConstant::CopyFrom(const SavedConstant& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.SavedConstant)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SavedConstant::IsInitialized() const {
  return true;
}

void SavedConstant::Swap(SavedConstant* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    SavedConstant* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == nullptr) {
      delete temp;
    }
  }
}
void SavedConstant::UnsafeArenaSwap(SavedConstant* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void SavedConstant::InternalSwap(SavedConstant* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  operation_.Swap(&other->operation_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::PROTOBUF_NAMESPACE_ID::Metadata SavedConstant::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SavedVariable::InitAsDefaultInstance() {
  ::tensorflow::_SavedVariable_default_instance_._instance.get_mutable()->shape_ = const_cast< ::tensorflow::TensorShapeProto*>(
      ::tensorflow::TensorShapeProto::internal_default_instance());
}
class SavedVariable::HasBitSetters {
 public:
  static const ::tensorflow::TensorShapeProto& shape(const SavedVariable* msg);
};

const ::tensorflow::TensorShapeProto&
SavedVariable::HasBitSetters::shape(const SavedVariable* msg) {
  return *msg->shape_;
}
void SavedVariable::unsafe_arena_set_allocated_shape(
    ::tensorflow::TensorShapeProto* shape) {
  if (GetArenaNoVirtual() == nullptr) {
    delete shape_;
  }
  shape_ = shape;
  if (shape) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.SavedVariable.shape)
}
void SavedVariable::clear_shape() {
  if (GetArenaNoVirtual() == nullptr && shape_ != nullptr) {
    delete shape_;
  }
  shape_ = nullptr;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SavedVariable::kDtypeFieldNumber;
const int SavedVariable::kShapeFieldNumber;
const int SavedVariable::kTrainableFieldNumber;
const int SavedVariable::kSynchronizationFieldNumber;
const int SavedVariable::kAggregationFieldNumber;
const int SavedVariable::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SavedVariable::SavedVariable()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.SavedVariable)
}
SavedVariable::SavedVariable(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
  _internal_metadata_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.SavedVariable)
}
SavedVariable::SavedVariable(const SavedVariable& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.name(),
      GetArenaNoVirtual());
  }
  if (from.has_shape()) {
    shape_ = new ::tensorflow::TensorShapeProto(*from.shape_);
  } else {
    shape_ = nullptr;
  }
  ::memcpy(&dtype_, &from.dtype_,
    static_cast<size_t>(reinterpret_cast<char*>(&aggregation_) -
    reinterpret_cast<char*>(&dtype_)) + sizeof(aggregation_));
  // @@protoc_insertion_point(copy_constructor:tensorflow.SavedVariable)
}

void SavedVariable::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SavedVariable_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&shape_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&aggregation_) -
      reinterpret_cast<char*>(&shape_)) + sizeof(aggregation_));
}

SavedVariable::~SavedVariable() {
  // @@protoc_insertion_point(destructor:tensorflow.SavedVariable)
  SharedDtor();
}

void SavedVariable::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete shape_;
}

void SavedVariable::ArenaDtor(void* object) {
  SavedVariable* _this = reinterpret_cast< SavedVariable* >(object);
  (void)_this;
}
void SavedVariable::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SavedVariable::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SavedVariable& SavedVariable::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SavedVariable_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto.base);
  return *internal_default_instance();
}


void SavedVariable::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.SavedVariable)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  if (GetArenaNoVirtual() == nullptr && shape_ != nullptr) {
    delete shape_;
  }
  shape_ = nullptr;
  ::memset(&dtype_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&aggregation_) -
      reinterpret_cast<char*>(&dtype_)) + sizeof(aggregation_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* SavedVariable::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArenaNoVirtual(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .tensorflow.DataType dtype = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          set_dtype(static_cast<::tensorflow::DataType>(val));
        } else goto handle_unusual;
        continue;
      // .tensorflow.TensorShapeProto shape = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(mutable_shape(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool trainable = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          trainable_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .tensorflow.VariableSynchronization synchronization = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          set_synchronization(static_cast<::tensorflow::VariableSynchronization>(val));
        } else goto handle_unusual;
        continue;
      // .tensorflow.VariableAggregation aggregation = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          set_aggregation(static_cast<::tensorflow::VariableAggregation>(val));
        } else goto handle_unusual;
        continue;
      // string name = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(mutable_name(), ptr, ctx, "tensorflow.SavedVariable.name");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool SavedVariable::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.SavedVariable)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .tensorflow.DataType dtype = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (8 & 0xFF)) {
          int value = 0;
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   int, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_dtype(static_cast< ::tensorflow::DataType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .tensorflow.TensorShapeProto shape = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_shape()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool trainable = 3;
      case 3: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (24 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   bool, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL>(
                 input, &trainable_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .tensorflow.VariableSynchronization synchronization = 4;
      case 4: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (32 & 0xFF)) {
          int value = 0;
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   int, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_synchronization(static_cast< ::tensorflow::VariableSynchronization >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .tensorflow.VariableAggregation aggregation = 5;
      case 5: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (40 & 0xFF)) {
          int value = 0;
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   int, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_aggregation(static_cast< ::tensorflow::VariableAggregation >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 6;
      case 6: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (50 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE,
            "tensorflow.SavedVariable.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.SavedVariable)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.SavedVariable)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void SavedVariable::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.SavedVariable)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .tensorflow.DataType dtype = 1;
  if (this->dtype() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnum(
      1, this->dtype(), output);
  }

  // .tensorflow.TensorShapeProto shape = 2;
  if (this->has_shape()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::shape(this), output);
  }

  // bool trainable = 3;
  if (this->trainable() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBool(3, this->trainable(), output);
  }

  // .tensorflow.VariableSynchronization synchronization = 4;
  if (this->synchronization() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnum(
      4, this->synchronization(), output);
  }

  // .tensorflow.VariableAggregation aggregation = 5;
  if (this->aggregation() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnum(
      5, this->aggregation(), output);
  }

  // string name = 6;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "tensorflow.SavedVariable.name");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.SavedVariable)
}

::PROTOBUF_NAMESPACE_ID::uint8* SavedVariable::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.SavedVariable)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .tensorflow.DataType dtype = 1;
  if (this->dtype() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->dtype(), target);
  }

  // .tensorflow.TensorShapeProto shape = 2;
  if (this->has_shape()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::shape(this), target);
  }

  // bool trainable = 3;
  if (this->trainable() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(3, this->trainable(), target);
  }

  // .tensorflow.VariableSynchronization synchronization = 4;
  if (this->synchronization() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      4, this->synchronization(), target);
  }

  // .tensorflow.VariableAggregation aggregation = 5;
  if (this->aggregation() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      5, this->aggregation(), target);
  }

  // string name = 6;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "tensorflow.SavedVariable.name");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        6, this->name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.SavedVariable)
  return target;
}

size_t SavedVariable::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.SavedVariable)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 6;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->name());
  }

  // .tensorflow.TensorShapeProto shape = 2;
  if (this->has_shape()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *shape_);
  }

  // .tensorflow.DataType dtype = 1;
  if (this->dtype() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->dtype());
  }

  // bool trainable = 3;
  if (this->trainable() != 0) {
    total_size += 1 + 1;
  }

  // .tensorflow.VariableSynchronization synchronization = 4;
  if (this->synchronization() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->synchronization());
  }

  // .tensorflow.VariableAggregation aggregation = 5;
  if (this->aggregation() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->aggregation());
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SavedVariable::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.SavedVariable)
  GOOGLE_DCHECK_NE(&from, this);
  const SavedVariable* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SavedVariable>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.SavedVariable)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.SavedVariable)
    MergeFrom(*source);
  }
}

void SavedVariable::MergeFrom(const SavedVariable& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.SavedVariable)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {
    set_name(from.name());
  }
  if (from.has_shape()) {
    mutable_shape()->::tensorflow::TensorShapeProto::MergeFrom(from.shape());
  }
  if (from.dtype() != 0) {
    set_dtype(from.dtype());
  }
  if (from.trainable() != 0) {
    set_trainable(from.trainable());
  }
  if (from.synchronization() != 0) {
    set_synchronization(from.synchronization());
  }
  if (from.aggregation() != 0) {
    set_aggregation(from.aggregation());
  }
}

void SavedVariable::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.SavedVariable)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SavedVariable::CopyFrom(const SavedVariable& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.SavedVariable)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SavedVariable::IsInitialized() const {
  return true;
}

void SavedVariable::Swap(SavedVariable* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    SavedVariable* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == nullptr) {
      delete temp;
    }
  }
}
void SavedVariable::UnsafeArenaSwap(SavedVariable* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void SavedVariable::InternalSwap(SavedVariable* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(shape_, other->shape_);
  swap(dtype_, other->dtype_);
  swap(trainable_, other->trainable_);
  swap(synchronization_, other->synchronization_);
  swap(aggregation_, other->aggregation_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SavedVariable::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void FunctionSpec::InitAsDefaultInstance() {
  ::tensorflow::_FunctionSpec_default_instance_._instance.get_mutable()->fullargspec_ = const_cast< ::tensorflow::StructuredValue*>(
      ::tensorflow::StructuredValue::internal_default_instance());
  ::tensorflow::_FunctionSpec_default_instance_._instance.get_mutable()->input_signature_ = const_cast< ::tensorflow::StructuredValue*>(
      ::tensorflow::StructuredValue::internal_default_instance());
}
class FunctionSpec::HasBitSetters {
 public:
  static const ::tensorflow::StructuredValue& fullargspec(const FunctionSpec* msg);
  static const ::tensorflow::StructuredValue& input_signature(const FunctionSpec* msg);
};

const ::tensorflow::StructuredValue&
FunctionSpec::HasBitSetters::fullargspec(const FunctionSpec* msg) {
  return *msg->fullargspec_;
}
const ::tensorflow::StructuredValue&
FunctionSpec::HasBitSetters::input_signature(const FunctionSpec* msg) {
  return *msg->input_signature_;
}
void FunctionSpec::unsafe_arena_set_allocated_fullargspec(
    ::tensorflow::StructuredValue* fullargspec) {
  if (GetArenaNoVirtual() == nullptr) {
    delete fullargspec_;
  }
  fullargspec_ = fullargspec;
  if (fullargspec) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.FunctionSpec.fullargspec)
}
void FunctionSpec::clear_fullargspec() {
  if (GetArenaNoVirtual() == nullptr && fullargspec_ != nullptr) {
    delete fullargspec_;
  }
  fullargspec_ = nullptr;
}
void FunctionSpec::unsafe_arena_set_allocated_input_signature(
    ::tensorflow::StructuredValue* input_signature) {
  if (GetArenaNoVirtual() == nullptr) {
    delete input_signature_;
  }
  input_signature_ = input_signature;
  if (input_signature) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.FunctionSpec.input_signature)
}
void FunctionSpec::clear_input_signature() {
  if (GetArenaNoVirtual() == nullptr && input_signature_ != nullptr) {
    delete input_signature_;
  }
  input_signature_ = nullptr;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FunctionSpec::kFullargspecFieldNumber;
const int FunctionSpec::kIsMethodFieldNumber;
const int FunctionSpec::kInputSignatureFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FunctionSpec::FunctionSpec()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.FunctionSpec)
}
FunctionSpec::FunctionSpec(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
  _internal_metadata_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.FunctionSpec)
}
FunctionSpec::FunctionSpec(const FunctionSpec& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_fullargspec()) {
    fullargspec_ = new ::tensorflow::StructuredValue(*from.fullargspec_);
  } else {
    fullargspec_ = nullptr;
  }
  if (from.has_input_signature()) {
    input_signature_ = new ::tensorflow::StructuredValue(*from.input_signature_);
  } else {
    input_signature_ = nullptr;
  }
  is_method_ = from.is_method_;
  // @@protoc_insertion_point(copy_constructor:tensorflow.FunctionSpec)
}

void FunctionSpec::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_FunctionSpec_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto.base);
  ::memset(&fullargspec_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_method_) -
      reinterpret_cast<char*>(&fullargspec_)) + sizeof(is_method_));
}

FunctionSpec::~FunctionSpec() {
  // @@protoc_insertion_point(destructor:tensorflow.FunctionSpec)
  SharedDtor();
}

void FunctionSpec::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == nullptr);
  if (this != internal_default_instance()) delete fullargspec_;
  if (this != internal_default_instance()) delete input_signature_;
}

void FunctionSpec::ArenaDtor(void* object) {
  FunctionSpec* _this = reinterpret_cast< FunctionSpec* >(object);
  (void)_this;
}
void FunctionSpec::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void FunctionSpec::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const FunctionSpec& FunctionSpec::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_FunctionSpec_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto.base);
  return *internal_default_instance();
}


void FunctionSpec::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.FunctionSpec)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && fullargspec_ != nullptr) {
    delete fullargspec_;
  }
  fullargspec_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && input_signature_ != nullptr) {
    delete input_signature_;
  }
  input_signature_ = nullptr;
  is_method_ = false;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* FunctionSpec::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArenaNoVirtual(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .tensorflow.StructuredValue fullargspec = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(mutable_fullargspec(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool is_method = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          is_method_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .tensorflow.StructuredValue input_signature = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(mutable_input_signature(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool FunctionSpec::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.FunctionSpec)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .tensorflow.StructuredValue fullargspec = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_fullargspec()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_method = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (16 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   bool, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_method_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .tensorflow.StructuredValue input_signature = 5;
      case 5: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (42 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_input_signature()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.FunctionSpec)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.FunctionSpec)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void FunctionSpec::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.FunctionSpec)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .tensorflow.StructuredValue fullargspec = 1;
  if (this->has_fullargspec()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::fullargspec(this), output);
  }

  // bool is_method = 2;
  if (this->is_method() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBool(2, this->is_method(), output);
  }

  // .tensorflow.StructuredValue input_signature = 5;
  if (this->has_input_signature()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, HasBitSetters::input_signature(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.FunctionSpec)
}

::PROTOBUF_NAMESPACE_ID::uint8* FunctionSpec::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.FunctionSpec)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .tensorflow.StructuredValue fullargspec = 1;
  if (this->has_fullargspec()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::fullargspec(this), target);
  }

  // bool is_method = 2;
  if (this->is_method() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->is_method(), target);
  }

  // .tensorflow.StructuredValue input_signature = 5;
  if (this->has_input_signature()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, HasBitSetters::input_signature(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.FunctionSpec)
  return target;
}

size_t FunctionSpec::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.FunctionSpec)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .tensorflow.StructuredValue fullargspec = 1;
  if (this->has_fullargspec()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *fullargspec_);
  }

  // .tensorflow.StructuredValue input_signature = 5;
  if (this->has_input_signature()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *input_signature_);
  }

  // bool is_method = 2;
  if (this->is_method() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FunctionSpec::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.FunctionSpec)
  GOOGLE_DCHECK_NE(&from, this);
  const FunctionSpec* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<FunctionSpec>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.FunctionSpec)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.FunctionSpec)
    MergeFrom(*source);
  }
}

void FunctionSpec::MergeFrom(const FunctionSpec& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.FunctionSpec)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_fullargspec()) {
    mutable_fullargspec()->::tensorflow::StructuredValue::MergeFrom(from.fullargspec());
  }
  if (from.has_input_signature()) {
    mutable_input_signature()->::tensorflow::StructuredValue::MergeFrom(from.input_signature());
  }
  if (from.is_method() != 0) {
    set_is_method(from.is_method());
  }
}

void FunctionSpec::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.FunctionSpec)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FunctionSpec::CopyFrom(const FunctionSpec& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.FunctionSpec)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FunctionSpec::IsInitialized() const {
  return true;
}

void FunctionSpec::Swap(FunctionSpec* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    FunctionSpec* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == nullptr) {
      delete temp;
    }
  }
}
void FunctionSpec::UnsafeArenaSwap(FunctionSpec* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void FunctionSpec::InternalSwap(FunctionSpec* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(fullargspec_, other->fullargspec_);
  swap(input_signature_, other->input_signature_);
  swap(is_method_, other->is_method_);
}

::PROTOBUF_NAMESPACE_ID::Metadata FunctionSpec::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SavedResource::InitAsDefaultInstance() {
}
class SavedResource::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SavedResource::kDeviceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SavedResource::SavedResource()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.SavedResource)
}
SavedResource::SavedResource(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
  _internal_metadata_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:tensorflow.SavedResource)
}
SavedResource::SavedResource(const SavedResource& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  device_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.device().size() > 0) {
    device_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.device(),
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(copy_constructor:tensorflow.SavedResource)
}

void SavedResource::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SavedResource_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto.base);
  device_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

SavedResource::~SavedResource() {
  // @@protoc_insertion_point(destructor:tensorflow.SavedResource)
  SharedDtor();
}

void SavedResource::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == nullptr);
  device_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void SavedResource::ArenaDtor(void* object) {
  SavedResource* _this = reinterpret_cast< SavedResource* >(object);
  (void)_this;
}
void SavedResource::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SavedResource::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SavedResource& SavedResource::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SavedResource_tensorflow_2fcore_2fprotobuf_2fsaved_5fobject_5fgraph_2eproto.base);
  return *internal_default_instance();
}


void SavedResource::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.SavedResource)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  device_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* SavedResource::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArenaNoVirtual(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string device = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(mutable_device(), ptr, ctx, "tensorflow.SavedResource.device");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool SavedResource::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.SavedResource)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string device = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_device()));
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
            this->device().data(), static_cast<int>(this->device().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE,
            "tensorflow.SavedResource.device"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.SavedResource)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.SavedResource)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void SavedResource::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.SavedResource)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string device = 1;
  if (this->device().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->device().data(), static_cast<int>(this->device().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "tensorflow.SavedResource.device");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->device(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.SavedResource)
}

::PROTOBUF_NAMESPACE_ID::uint8* SavedResource::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.SavedResource)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string device = 1;
  if (this->device().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->device().data(), static_cast<int>(this->device().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "tensorflow.SavedResource.device");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        1, this->device(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.SavedResource)
  return target;
}

size_t SavedResource::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.SavedResource)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string device = 1;
  if (this->device().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->device());
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SavedResource::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.SavedResource)
  GOOGLE_DCHECK_NE(&from, this);
  const SavedResource* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SavedResource>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.SavedResource)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.SavedResource)
    MergeFrom(*source);
  }
}

void SavedResource::MergeFrom(const SavedResource& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.SavedResource)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.device().size() > 0) {
    set_device(from.device());
  }
}

void SavedResource::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.SavedResource)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SavedResource::CopyFrom(const SavedResource& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.SavedResource)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SavedResource::IsInitialized() const {
  return true;
}

void SavedResource::Swap(SavedResource* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    SavedResource* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == nullptr) {
      delete temp;
    }
  }
}
void SavedResource::UnsafeArenaSwap(SavedResource* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void SavedResource::InternalSwap(SavedResource* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  device_.Swap(&other->device_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::PROTOBUF_NAMESPACE_ID::Metadata SavedResource::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace tensorflow
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::tensorflow::SavedObjectGraph_ConcreteFunctionsEntry_DoNotUse* Arena::CreateMaybeMessage< ::tensorflow::SavedObjectGraph_ConcreteFunctionsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tensorflow::SavedObjectGraph_ConcreteFunctionsEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::tensorflow::SavedObjectGraph* Arena::CreateMaybeMessage< ::tensorflow::SavedObjectGraph >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tensorflow::SavedObjectGraph >(arena);
}
template<> PROTOBUF_NOINLINE ::tensorflow::SavedObject* Arena::CreateMaybeMessage< ::tensorflow::SavedObject >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tensorflow::SavedObject >(arena);
}
template<> PROTOBUF_NOINLINE ::tensorflow::SavedUserObject* Arena::CreateMaybeMessage< ::tensorflow::SavedUserObject >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tensorflow::SavedUserObject >(arena);
}
template<> PROTOBUF_NOINLINE ::tensorflow::SavedAsset* Arena::CreateMaybeMessage< ::tensorflow::SavedAsset >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tensorflow::SavedAsset >(arena);
}
template<> PROTOBUF_NOINLINE ::tensorflow::SavedFunction* Arena::CreateMaybeMessage< ::tensorflow::SavedFunction >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tensorflow::SavedFunction >(arena);
}
template<> PROTOBUF_NOINLINE ::tensorflow::SavedConcreteFunction* Arena::CreateMaybeMessage< ::tensorflow::SavedConcreteFunction >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tensorflow::SavedConcreteFunction >(arena);
}
template<> PROTOBUF_NOINLINE ::tensorflow::SavedBareConcreteFunction* Arena::CreateMaybeMessage< ::tensorflow::SavedBareConcreteFunction >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tensorflow::SavedBareConcreteFunction >(arena);
}
template<> PROTOBUF_NOINLINE ::tensorflow::SavedConstant* Arena::CreateMaybeMessage< ::tensorflow::SavedConstant >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tensorflow::SavedConstant >(arena);
}
template<> PROTOBUF_NOINLINE ::tensorflow::SavedVariable* Arena::CreateMaybeMessage< ::tensorflow::SavedVariable >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tensorflow::SavedVariable >(arena);
}
template<> PROTOBUF_NOINLINE ::tensorflow::FunctionSpec* Arena::CreateMaybeMessage< ::tensorflow::FunctionSpec >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tensorflow::FunctionSpec >(arena);
}
template<> PROTOBUF_NOINLINE ::tensorflow::SavedResource* Arena::CreateMaybeMessage< ::tensorflow::SavedResource >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tensorflow::SavedResource >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
